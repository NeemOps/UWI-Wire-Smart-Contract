{
	"id": "978063f8a4a3ca147cd7b765209eb06f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Pelicoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ncontract PeliCoin is ERC20, Ownable, ERC20Burnable {\r\n\r\n    using SafeERC20 for IERC20;\r\n    \r\n    mapping(address => bool) public authorizedOwners;\r\n\r\n\r\n    uint256 public tetherPrice  = 1;   \r\n\r\n    \r\n    constructor() ERC20(\"PeliCoin\", \"PLC\") {\r\n        addAuthorizedOwner(msg.sender);\r\n    }\r\n\r\n\r\n    /* MINT TOKENS TO AN ADDRESS */\r\n        function mint(address to, uint256 amount) public onlyAuthorizedOwner(){    \r\n\r\n            amount = amount/tetherPrice;\r\n\r\n            _mint(to, amount);\r\n        }\r\n\r\n\r\n    /* OWNER AUTHORIZATION */\r\n        function addAuthorizedOwner(address newOwner) public onlyOwner{\r\n            authorizedOwners[newOwner] = true;\r\n        }\r\n\r\n        function removeAuthorizedOwner(address ownerToRemove) public onlyOwner{\r\n            authorizedOwners[ownerToRemove] = false;\r\n        }\r\n\r\n        modifier onlyAuthorizedOwner(){\r\n            require(authorizedOwners[msg.sender], \"Pelicoin: only authorized owners.\");\r\n            _;\r\n        }\r\n\r\n\r\n    /* UPDATE USDT PRICE */\r\n    function setTetherPrice(uint256 newTetherPrice) public onlyAuthorizedOwner{\r\n        tetherPrice = newTetherPrice;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_140:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_141:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_142:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_143:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_144:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_146:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_148:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_149:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_196\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_150:\n        /* \"#utility.yul\":1983:2007   */\n      tag_198\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_199:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_151:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_201\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_152:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_153:\n        /* \"#utility.yul\":2339:2363   */\n      tag_204\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_205:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_154:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_207\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_210\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2632:2751   */\n    tag_209:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_211\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_151\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_212\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_155:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_156:\n        /* \"#utility.yul\":3196:3217   */\n      tag_215\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_217\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_157:\n        /* \"#utility.yul\":3533:3557   */\n      tag_219\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_221\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3908:4027   */\n    tag_223:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_225\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_151\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_226\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_227\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_158:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_159:\n        /* \"#utility.yul\":4598:4620   */\n      tag_230\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_232\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_235\n      tag_146\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4929:5048   */\n    tag_234:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_239\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5281:5400   */\n    tag_238:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_240\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_241\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_160:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_244:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_246\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6084:6168   */\n    tag_245:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_161:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_249\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_152\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_250\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6514:6550   */\n    tag_251:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6787   */\n    tag_162:\n        /* \"#utility.yul\":6703:6737   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6691:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6701   */\n      add\n        /* \"#utility.yul\":6680:6738   */\n      mstore\n        /* \"#utility.yul\":6772:6779   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6755:6770   */\n      add\n        /* \"#utility.yul\":6748:6780   */\n      mstore\n        /* \"#utility.yul\":6563:6787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6793:7159   */\n    tag_163:\n        /* \"#utility.yul\":6935:6938   */\n      0x00\n        /* \"#utility.yul\":6956:7023   */\n      tag_255\n        /* \"#utility.yul\":7020:7022   */\n      0x25\n        /* \"#utility.yul\":7015:7018   */\n      dup4\n        /* \"#utility.yul\":6956:7023   */\n      tag_141\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6949:7023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7125   */\n      tag_256\n        /* \"#utility.yul\":7121:7124   */\n      dup3\n        /* \"#utility.yul\":7032:7125   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7150:7152   */\n      0x40\n        /* \"#utility.yul\":7145:7148   */\n      dup3\n        /* \"#utility.yul\":7141:7153   */\n      add\n        /* \"#utility.yul\":7134:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:7159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7584   */\n    tag_101:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7577   */\n      tag_258\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7446:7577   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7438:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7813   */\n    tag_164:\n        /* \"#utility.yul\":7730:7764   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7728   */\n      add\n        /* \"#utility.yul\":7707:7765   */\n      mstore\n        /* \"#utility.yul\":7799:7805   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7786:7792   */\n      dup3\n        /* \"#utility.yul\":7782:7797   */\n      add\n        /* \"#utility.yul\":7775:7806   */\n      mstore\n        /* \"#utility.yul\":7590:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8185   */\n    tag_165:\n        /* \"#utility.yul\":7961:7964   */\n      0x00\n        /* \"#utility.yul\":7982:8049   */\n      tag_261\n        /* \"#utility.yul\":8046:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8044   */\n      dup4\n        /* \"#utility.yul\":7982:8049   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7975:8049   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8151   */\n      tag_262\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8058:8151   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8167:8179   */\n      add\n        /* \"#utility.yul\":8160:8179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8610   */\n    tag_111:\n        /* \"#utility.yul\":8357:8361   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8384:8393   */\n      dup3\n        /* \"#utility.yul\":8380:8398   */\n      add\n        /* \"#utility.yul\":8372:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8453   */\n      dup2\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8434:8454   */\n      sub\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8419:8428   */\n      dup4\n        /* \"#utility.yul\":8415:8432   */\n      add\n        /* \"#utility.yul\":8408:8455   */\n      mstore\n        /* \"#utility.yul\":8472:8603   */\n      tag_264\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8472:8603   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8464:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8837   */\n    tag_166:\n        /* \"#utility.yul\":8756:8790   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8740:8754   */\n      add\n        /* \"#utility.yul\":8733:8791   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8820:8822   */\n      0x20\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8823   */\n      add\n        /* \"#utility.yul\":8801:8830   */\n      mstore\n        /* \"#utility.yul\":8616:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_167:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_267\n        /* \"#utility.yul\":9070:9072   */\n      0x22\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_268\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_166\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_114:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_270\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9819   */\n    tag_168:\n        /* \"#utility.yul\":9780:9811   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      add\n        /* \"#utility.yul\":9757:9812   */\n      mstore\n        /* \"#utility.yul\":9640:9819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10191   */\n    tag_169:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:10055   */\n      tag_273\n        /* \"#utility.yul\":10052:10054   */\n      0x1d\n        /* \"#utility.yul\":10047:10050   */\n      dup4\n        /* \"#utility.yul\":9988:10055   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9981:10055   */\n      swap2\n      pop\n        /* \"#utility.yul\":10064:10157   */\n      tag_274\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10064:10157   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10177:10180   */\n      dup3\n        /* \"#utility.yul\":10173:10185   */\n      add\n        /* \"#utility.yul\":10166:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10616   */\n    tag_121:\n        /* \"#utility.yul\":10363:10367   */\n      0x00\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"#utility.yul\":10390:10399   */\n      dup3\n        /* \"#utility.yul\":10386:10404   */\n      add\n        /* \"#utility.yul\":10378:10404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10459   */\n      dup2\n        /* \"#utility.yul\":10444:10448   */\n      dup2\n        /* \"#utility.yul\":10440:10460   */\n      sub\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10421:10438   */\n      add\n        /* \"#utility.yul\":10414:10461   */\n      mstore\n        /* \"#utility.yul\":10478:10609   */\n      tag_276\n        /* \"#utility.yul\":10604:10608   */\n      dup2\n        /* \"#utility.yul\":10478:10609   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10470:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10846   */\n    tag_170:\n        /* \"#utility.yul\":10762:10796   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10758:10759   */\n      0x00\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10746:10760   */\n      add\n        /* \"#utility.yul\":10739:10797   */\n      mstore\n        /* \"#utility.yul\":10831:10838   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10826:10828   */\n      0x20\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10829   */\n      add\n        /* \"#utility.yul\":10807:10839   */\n      mstore\n        /* \"#utility.yul\":10622:10846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11218   */\n    tag_171:\n        /* \"#utility.yul\":10994:10997   */\n      0x00\n        /* \"#utility.yul\":11015:11082   */\n      tag_279\n        /* \"#utility.yul\":11079:11081   */\n      0x25\n        /* \"#utility.yul\":11074:11077   */\n      dup4\n        /* \"#utility.yul\":11015:11082   */\n      tag_141\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11008:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11184   */\n      tag_280\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11091:11184   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11209:11211   */\n      0x40\n        /* \"#utility.yul\":11204:11207   */\n      dup3\n        /* \"#utility.yul\":11200:11212   */\n      add\n        /* \"#utility.yul\":11193:11212   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:11218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11643   */\n    tag_126:\n        /* \"#utility.yul\":11390:11394   */\n      0x00\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11417:11426   */\n      dup3\n        /* \"#utility.yul\":11413:11431   */\n      add\n        /* \"#utility.yul\":11405:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11486   */\n      dup2\n        /* \"#utility.yul\":11471:11475   */\n      dup2\n        /* \"#utility.yul\":11467:11487   */\n      sub\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11441:11488   */\n      mstore\n        /* \"#utility.yul\":11505:11636   */\n      tag_282\n        /* \"#utility.yul\":11631:11635   */\n      dup2\n        /* \"#utility.yul\":11505:11636   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11497:11636   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11649:11871   */\n    tag_172:\n        /* \"#utility.yul\":11789:11823   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11777:11783   */\n      dup3\n        /* \"#utility.yul\":11773:11787   */\n      add\n        /* \"#utility.yul\":11766:11824   */\n      mstore\n        /* \"#utility.yul\":11858:11863   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11845:11851   */\n      dup3\n        /* \"#utility.yul\":11841:11856   */\n      add\n        /* \"#utility.yul\":11834:11864   */\n      mstore\n        /* \"#utility.yul\":11649:11871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12243   */\n    tag_173:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12107   */\n      tag_285\n        /* \"#utility.yul\":12104:12106   */\n      0x23\n        /* \"#utility.yul\":12099:12102   */\n      dup4\n        /* \"#utility.yul\":12040:12107   */\n      tag_141\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12033:12107   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12209   */\n      tag_286\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12116:12209   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12225:12237   */\n      add\n        /* \"#utility.yul\":12218:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12668   */\n    tag_129:\n        /* \"#utility.yul\":12415:12419   */\n      0x00\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12442:12451   */\n      dup3\n        /* \"#utility.yul\":12438:12456   */\n      add\n        /* \"#utility.yul\":12430:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12511   */\n      dup2\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12512   */\n      sub\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12466:12513   */\n      mstore\n        /* \"#utility.yul\":12530:12661   */\n      tag_288\n        /* \"#utility.yul\":12656:12660   */\n      dup2\n        /* \"#utility.yul\":12530:12661   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12522:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12899   */\n    tag_174:\n        /* \"#utility.yul\":12814:12848   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12812   */\n      add\n        /* \"#utility.yul\":12791:12849   */\n      mstore\n        /* \"#utility.yul\":12883:12891   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12878:12880   */\n      0x20\n        /* \"#utility.yul\":12870:12876   */\n      dup3\n        /* \"#utility.yul\":12866:12881   */\n      add\n        /* \"#utility.yul\":12859:12892   */\n      mstore\n        /* \"#utility.yul\":12674:12899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13271   */\n    tag_175:\n        /* \"#utility.yul\":13047:13050   */\n      0x00\n        /* \"#utility.yul\":13068:13135   */\n      tag_291\n        /* \"#utility.yul\":13132:13134   */\n      0x26\n        /* \"#utility.yul\":13127:13130   */\n      dup4\n        /* \"#utility.yul\":13068:13135   */\n      tag_141\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13061:13135   */\n      swap2\n      pop\n        /* \"#utility.yul\":13144:13237   */\n      tag_292\n        /* \"#utility.yul\":13233:13236   */\n      dup3\n        /* \"#utility.yul\":13144:13237   */\n      tag_174\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13257:13260   */\n      dup3\n        /* \"#utility.yul\":13253:13265   */\n      add\n        /* \"#utility.yul\":13246:13265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12905:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13696   */\n    tag_134:\n        /* \"#utility.yul\":13443:13447   */\n      0x00\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13470:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13484   */\n      add\n        /* \"#utility.yul\":13458:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13539   */\n      dup2\n        /* \"#utility.yul\":13524:13528   */\n      dup2\n        /* \"#utility.yul\":13520:13540   */\n      sub\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13505:13514   */\n      dup4\n        /* \"#utility.yul\":13501:13518   */\n      add\n        /* \"#utility.yul\":13494:13541   */\n      mstore\n        /* \"#utility.yul\":13558:13689   */\n      tag_294\n        /* \"#utility.yul\":13684:13688   */\n      dup2\n        /* \"#utility.yul\":13558:13689   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13550:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204188b273199f085e1921ec1a1fa55abdee2e425960bda675a51fac85acd9972064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:10"
															},
															"nodeType": "YulIf",
															"src": "2801:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													}
												],
												"src": "2677:853:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:10",
														"type": ""
													}
												],
												"src": "3536:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:10"
															},
															"nodeType": "YulIf",
															"src": "3966:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:10"
															},
															"nodeType": "YulIf",
															"src": "4057:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:10",
														"type": ""
													}
												],
												"src": "3827:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:10",
														"type": ""
													}
												],
												"src": "4153:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:10",
														"type": ""
													}
												],
												"src": "4300:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:10",
														"type": ""
													}
												],
												"src": "4399:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:10",
														"type": ""
													}
												],
												"src": "4512:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:10",
														"type": ""
													}
												],
												"src": "4911:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:10",
														"type": ""
													}
												],
												"src": "4994:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:10",
														"type": ""
													}
												],
												"src": "5060:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:10",
														"type": ""
													}
												],
												"src": "5208:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:10",
														"type": ""
													}
												],
												"src": "5289:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:10",
														"type": ""
													}
												],
												"src": "5564:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:10",
														"type": ""
													}
												],
												"src": "5643:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:10",
																"statements": []
															},
															"src": "5898:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:10",
														"type": ""
													}
												],
												"src": "5838:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:10"
															},
															"nodeType": "YulIf",
															"src": "6120:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:10",
														"type": ""
													}
												],
												"src": "6030:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:10",
														"type": ""
													}
												],
												"src": "6579:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:10",
														"type": ""
													}
												],
												"src": "6702:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:10",
														"type": ""
													}
												],
												"src": "6876:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:10"
															},
															"nodeType": "YulIf",
															"src": "7381:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:10",
																					"statements": []
																				},
																				"src": "7867:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:10",
														"type": ""
													}
												],
												"src": "7176:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212204188b273199f085e1921ec1a1fa55abdee2e425960bda675a51fac85acd9972064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE DUP9 0xB2 PUSH20 0x199F085E1921EC1A1FA55ABDEE2E425960BDA675 0xA5 0x1F 0xAC DUP6 0xAC 0xD9 SWAP8 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1401:11610:1:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": 2679,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 1447,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": 2674,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1505": {
									"entryPoint": 1439,
									"id": 1505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 1904,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 2044,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 1304,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 776,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": 932,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_187": {
									"entryPoint": 868,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 1150,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 877,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_167": {
									"entryPoint": 630,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_177": {
									"entryPoint": 1004,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": 811,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 821,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_236": {
									"entryPoint": 1269,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13699:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:10",
														"type": ""
													}
												],
												"src": "3446:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:10",
														"type": ""
													}
												],
												"src": "3570:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:10"
															},
															"nodeType": "YulIf",
															"src": "3908:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:10",
														"type": ""
													}
												],
												"src": "3798:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:10",
														"type": ""
													}
												],
												"src": "4423:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:10",
														"type": ""
													}
												],
												"src": "4515:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:10",
														"type": ""
													}
												],
												"src": "4633:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:10"
															},
															"nodeType": "YulIf",
															"src": "4929:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:10",
														"type": ""
													}
												],
												"src": "4853:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:10"
															},
															"nodeType": "YulIf",
															"src": "5281:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:10",
														"type": ""
													}
												],
												"src": "5188:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:10"
															},
															"nodeType": "YulIf",
															"src": "5993:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:10"
															},
															"nodeType": "YulIf",
															"src": "6084:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:10",
														"type": ""
													}
												],
												"src": "5854:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:10"
															},
															"nodeType": "YulIf",
															"src": "6514:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:10",
														"type": ""
													}
												],
												"src": "6366:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:14:10"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6703:34:10",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6680:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:15:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6772:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6661:6:10",
														"type": ""
													}
												],
												"src": "6563:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6956:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7032:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6927:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6935:3:10",
														"type": ""
													}
												],
												"src": "6793:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7346:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7438:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7572:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7446:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7316:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:10",
														"type": ""
													}
												],
												"src": "7165:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7696:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:14:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7786:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7782:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7688:6:10",
														"type": ""
													}
												],
												"src": "7590:223:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7965:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7975:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7982:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8058:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8160:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7953:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7961:3:10",
														"type": ""
													}
												],
												"src": "7819:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8362:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8372:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8438:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8464:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8472:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8342:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8357:4:10",
														"type": ""
													}
												],
												"src": "8191:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8722:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:14:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8756:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8733:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8812:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8820:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:15:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8825:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8714:6:10",
														"type": ""
													}
												],
												"src": "8616:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8989:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8999:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8985:3:10",
														"type": ""
													}
												],
												"src": "8843:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:10",
														"type": ""
													}
												],
												"src": "9215:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9768:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:10"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:10",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9738:6:10",
														"type": ""
													}
												],
												"src": "9640:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9971:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9981:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9988:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10153:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10064:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10166:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10177:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9959:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9967:3:10",
														"type": ""
													}
												],
												"src": "9825:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10378:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10421:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10444:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10440:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10604:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10478:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10363:4:10",
														"type": ""
													}
												],
												"src": "10197:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10762:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10831:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10720:6:10",
														"type": ""
													}
												],
												"src": "10622:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10998:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11008:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11015:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11091:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11193:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10986:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10994:3:10",
														"type": ""
													}
												],
												"src": "10852:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11405:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11463:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11471:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11441:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11631:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11505:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11375:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11390:4:10",
														"type": ""
													}
												],
												"src": "11224:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11755:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11777:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11773:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11789:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11845:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11853:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:15:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11858:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11747:6:10",
														"type": ""
													}
												],
												"src": "11649:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12104:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12040:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12116:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12218:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12225:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12011:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12019:3:10",
														"type": ""
													}
												],
												"src": "11877:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12420:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12430:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12656:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12530:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12522:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12400:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12415:4:10",
														"type": ""
													}
												],
												"src": "12249:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12780:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12814:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12878:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:15:10"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12883:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12859:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12772:6:10",
														"type": ""
													}
												],
												"src": "12674:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13051:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13061:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13068:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13144:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13246:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13039:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13047:3:10",
														"type": ""
													}
												],
												"src": "12905:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13448:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13458:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13466:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13458:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13524:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13550:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13684:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13558:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13550:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13428:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13443:4:10",
														"type": ""
													}
												],
												"src": "13277:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212204188b273199f085e1921ec1a1fa55abdee2e425960bda675a51fac85acd9972064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE DUP9 0xB2 PUSH20 0x199F085E1921EC1A1FA55ABDEE2E425960BDA675 0xA5 0x1F 0xAC DUP6 0xAC 0xD9 SWAP8 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1401:11610:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10504:370:1:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "931000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204188b273199f085e1921ec1a1fa55abdee2e425960bda675a51fac85acd9972064736f6c63430008110033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6737,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6687,
											"end": 6701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 10,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 6780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 6956,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7121,
											"end": 7124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 7032,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7446,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7765,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 10,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7982,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 8058,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7819,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8453,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 8472,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8790,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 10,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8820,
											"end": 8822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9757,
											"end": 9812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 9988,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 10478,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10796,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10622,
											"end": 10846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 11015,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11091,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 11207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11390,
											"end": 11394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11505,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "PUSH",
											"source": 10,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11841,
											"end": 11856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 12040,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 12116,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 12243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12492,
											"end": 12512,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12513,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 12530,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 12849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH",
											"source": 10,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12878,
											"end": 12880,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12674,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 13068,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 13144,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13524,
											"end": 13528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13520,
											"end": 13540,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13494,
											"end": 13541,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 13558,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13277,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Pelicoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xF88F5263029175B3545A48EAE1 SIGNEXTEND SLT SSTORE 0x4C 0xC8 PUSH9 0x76C6445B3E4E83CC51 0x4C DUP16 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206cf88f5263029175b3545a48eae10b12554cc86876c6445b3e4e83cc514c8f4264736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Pelicoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Pelicoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Pelicoin.sol": {
				"PeliCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "addAuthorizedOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedOwners",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ownerToRemove",
									"type": "address"
								}
							],
							"name": "removeAuthorizedOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTetherPrice",
									"type": "uint256"
								}
							],
							"name": "setTetherPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tetherPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Pelicoin.sol\":323:1470  contract PeliCoin is ERC20, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Pelicoin.sol\":511:512  1 */\n  0x01\n    /* \"contracts/Pelicoin.sol\":481:512  uint256 public tetherPrice  = 1 */\n  0x07\n  sstore\n    /* \"contracts/Pelicoin.sol\":530:618  constructor() ERC20(\"PeliCoin\", \"PLC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x50656c69436f696e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x504c430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/Pelicoin.sol\":580:610  addAuthorizedOwner(msg.sender) */\n  tag_15\n    /* \"contracts/Pelicoin.sol\":599:609  msg.sender */\n  caller\n    /* \"contracts/Pelicoin.sol\":580:598  addAuthorizedOwner */\n  shl(0x20, tag_16)\n    /* \"contracts/Pelicoin.sol\":580:610  addAuthorizedOwner(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/Pelicoin.sol\":323:1470  contract PeliCoin is ERC20, Ownable, ERC20Burnable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Pelicoin.sol\":878:1000  function addAuthorizedOwner(address newOwner) public onlyOwner{... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  tag_21\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/Pelicoin.sol\":984:988  true */\n  0x01\n    /* \"contracts/Pelicoin.sol\":955:971  authorizedOwners */\n  0x06\n    /* \"contracts/Pelicoin.sol\":955:981  authorizedOwners[newOwner] */\n  0x00\n    /* \"contracts/Pelicoin.sol\":972:980  newOwner */\n  dup4\n    /* \"contracts/Pelicoin.sol\":955:981  authorizedOwners[newOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Pelicoin.sol\":955:988  authorizedOwners[newOwner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pelicoin.sol\":878:1000  function addAuthorizedOwner(address newOwner) public onlyOwner{... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n  tag_25\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_32:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_33:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_34:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_35:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_60:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_62\n  tag_34\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":714:798   */\ntag_61:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_36:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_37:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_38:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_39:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_67\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_38\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1429:1468   */\n  tag_68\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_38\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_40:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_41:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_42:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_72\n    /* \"#utility.yul\":1818:1852   */\n  tag_73\n    /* \"#utility.yul\":1827:1851   */\n  tag_74\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_40\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1818:1852   */\n  tag_41\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1800:1853   */\n  tag_40\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_43:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_44:\n    /* \"#utility.yul\":2056:2095   */\n  tag_77\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_42\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2117:2208   */\n  tag_78\n    /* \"#utility.yul\":2166:2207   */\n  tag_79\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_39\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_45:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_46:\n    /* \"#utility.yul\":2377:2409   */\n  tag_82\n  tag_45\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2418:2483   */\n  tag_83\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_44\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_47:\n    /* \"#utility.yul\":2555:2675   */\ntag_85:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_88\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_46\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_48:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_91\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_36\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2906:2935   */\n  tag_92\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_93:\n    /* \"#utility.yul\":3133:3213   */\n  tag_94\n    /* \"#utility.yul\":3189:3211   */\n  tag_95\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_37\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_90:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_49:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_50:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_98\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_49\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_51:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_100\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_50\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_102\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_32\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_104\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4038:4094   */\ntag_103:\n    /* \"#utility.yul\":4118:4156   */\n  tag_105\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4203:4270   */\n  tag_106\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_48\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_109:\n    /* \"#utility.yul\":5144:5211   */\n  tag_110\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_51\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_107)\n    /* \"#utility.yul\":4365:4983   */\ntag_108:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_111\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_36\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_112:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_116\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_115:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_107:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5403   */\ntag_52:\n    /* \"#utility.yul\":5318:5329   */\n  0x00\n    /* \"#utility.yul\":5352:5358   */\n  dup3\n    /* \"#utility.yul\":5347:5350   */\n  dup3\n    /* \"#utility.yul\":5340:5359   */\n  mstore\n    /* \"#utility.yul\":5392:5396   */\n  0x20\n    /* \"#utility.yul\":5387:5390   */\n  dup3\n    /* \"#utility.yul\":5383:5397   */\n  add\n    /* \"#utility.yul\":5368:5397   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5409:5591   */\ntag_53:\n    /* \"#utility.yul\":5549:5583   */\n  0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    /* \"#utility.yul\":5545:5546   */\n  0x00\n    /* \"#utility.yul\":5537:5543   */\n  dup3\n    /* \"#utility.yul\":5533:5547   */\n  add\n    /* \"#utility.yul\":5526:5584   */\n  mstore\n    /* \"#utility.yul\":5409:5591   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5597:5963   */\ntag_54:\n    /* \"#utility.yul\":5739:5742   */\n  0x00\n    /* \"#utility.yul\":5760:5827   */\n  tag_120\n    /* \"#utility.yul\":5824:5826   */\n  0x20\n    /* \"#utility.yul\":5819:5822   */\n  dup4\n    /* \"#utility.yul\":5760:5827   */\n  tag_52\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5753:5827   */\n  swap2\n  pop\n    /* \"#utility.yul\":5836:5929   */\n  tag_121\n    /* \"#utility.yul\":5925:5928   */\n  dup3\n    /* \"#utility.yul\":5836:5929   */\n  tag_53\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5954:5956   */\n  0x20\n    /* \"#utility.yul\":5949:5952   */\n  dup3\n    /* \"#utility.yul\":5945:5957   */\n  add\n    /* \"#utility.yul\":5938:5957   */\n  swap1\n  pop\n    /* \"#utility.yul\":5597:5963   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5969:6388   */\ntag_30:\n    /* \"#utility.yul\":6135:6139   */\n  0x00\n    /* \"#utility.yul\":6173:6175   */\n  0x20\n    /* \"#utility.yul\":6162:6171   */\n  dup3\n    /* \"#utility.yul\":6158:6176   */\n  add\n    /* \"#utility.yul\":6150:6176   */\n  swap1\n  pop\n    /* \"#utility.yul\":6222:6231   */\n  dup2\n    /* \"#utility.yul\":6216:6220   */\n  dup2\n    /* \"#utility.yul\":6212:6232   */\n  sub\n    /* \"#utility.yul\":6208:6209   */\n  0x00\n    /* \"#utility.yul\":6197:6206   */\n  dup4\n    /* \"#utility.yul\":6193:6210   */\n  add\n    /* \"#utility.yul\":6186:6233   */\n  mstore\n    /* \"#utility.yul\":6250:6381   */\n  tag_123\n    /* \"#utility.yul\":6376:6380   */\n  dup2\n    /* \"#utility.yul\":6250:6381   */\n  tag_54\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6242:6381   */\n  swap1\n  pop\n    /* \"#utility.yul\":5969:6388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Pelicoin.sol\":323:1470  contract PeliCoin is ERC20, Ownable, ERC20Burnable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Pelicoin.sol\":323:1470  contract PeliCoin is ERC20, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x988d960f\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x988d960f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc527caf1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91510f98\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9448b877\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x39509351\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4d7e6732\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pelicoin.sol\":669:833  function mint(address to, uint256 amount) public onlyAuthorizedOwner(){    ... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Pelicoin.sol\":422:470  mapping(address => bool) public authorizedOwners */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pelicoin.sol\":1012:1148  function removeAuthorizedOwner(address ownerToRemove) public onlyOwner{... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/Pelicoin.sol\":481:512  uint256 public tetherPrice  = 1 */\n    tag_17:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pelicoin.sol\":1346:1467  function setTetherPrice(uint256 newTetherPrice) public onlyAuthorizedOwner{... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pelicoin.sol\":878:1000  function addAuthorizedOwner(address newOwner) public onlyOwner{... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_113\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":669:833  function mint(address to, uint256 amount) public onlyAuthorizedOwner(){    ... */\n    tag_57:\n        /* \"contracts/Pelicoin.sol\":1213:1229  authorizedOwners */\n      0x06\n        /* \"contracts/Pelicoin.sol\":1213:1241  authorizedOwners[msg.sender] */\n      0x00\n        /* \"contracts/Pelicoin.sol\":1230:1240  msg.sender */\n      caller\n        /* \"contracts/Pelicoin.sol\":1213:1241  authorizedOwners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pelicoin.sol\":1205:1279  require(authorizedOwners[msg.sender], \"Pelicoin: only authorized owners.\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/Pelicoin.sol\":776:787  tetherPrice */\n      sload(0x07)\n        /* \"contracts/Pelicoin.sol\":769:775  amount */\n      dup2\n        /* \"contracts/Pelicoin.sol\":769:787  amount/tetherPrice */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/Pelicoin.sol\":760:787  amount = amount/tetherPrice */\n      swap1\n      pop\n        /* \"contracts/Pelicoin.sol\":804:821  _mint(to, amount) */\n      tag_144\n        /* \"contracts/Pelicoin.sol\":810:812  to */\n      dup3\n        /* \"contracts/Pelicoin.sol\":814:820  amount */\n      dup3\n        /* \"contracts/Pelicoin.sol\":804:809  _mint */\n      tag_145\n        /* \"contracts/Pelicoin.sol\":804:821  _mint(to, amount) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Pelicoin.sol\":669:833  function mint(address to, uint256 amount) public onlyAuthorizedOwner(){    ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:651  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:649  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":639:651  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":422:470  mapping(address => bool) public authorizedOwners */\n    tag_65:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1086  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1084  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1074:1086  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":1012:1148  function removeAuthorizedOwner(address ownerToRemove) public onlyOwner{... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Pelicoin.sol\":1131:1136  false */\n      0x00\n        /* \"contracts/Pelicoin.sol\":1097:1113  authorizedOwners */\n      0x06\n        /* \"contracts/Pelicoin.sol\":1097:1128  authorizedOwners[ownerToRemove] */\n      0x00\n        /* \"contracts/Pelicoin.sol\":1114:1127  ownerToRemove */\n      dup4\n        /* \"contracts/Pelicoin.sol\":1097:1128  authorizedOwners[ownerToRemove] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Pelicoin.sol\":1097:1136  authorizedOwners[ownerToRemove] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pelicoin.sol\":1012:1148  function removeAuthorizedOwner(address ownerToRemove) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":481:512  uint256 public tetherPrice  = 1 */\n    tag_84:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_113\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_113\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":1346:1467  function setTetherPrice(uint256 newTetherPrice) public onlyAuthorizedOwner{... */\n    tag_91:\n        /* \"contracts/Pelicoin.sol\":1213:1229  authorizedOwners */\n      0x06\n        /* \"contracts/Pelicoin.sol\":1213:1241  authorizedOwners[msg.sender] */\n      0x00\n        /* \"contracts/Pelicoin.sol\":1230:1240  msg.sender */\n      caller\n        /* \"contracts/Pelicoin.sol\":1213:1241  authorizedOwners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pelicoin.sol\":1205:1279  require(authorizedOwners[msg.sender], \"Pelicoin: only authorized owners.\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_140\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/Pelicoin.sol\":1445:1459  newTetherPrice */\n      dup1\n        /* \"contracts/Pelicoin.sol\":1431:1442  tetherPrice */\n      0x07\n        /* \"contracts/Pelicoin.sol\":1431:1459  tetherPrice = newTetherPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pelicoin.sol\":1346:1467  function setTetherPrice(uint256 newTetherPrice) public onlyAuthorizedOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Pelicoin.sol\":878:1000  function addAuthorizedOwner(address newOwner) public onlyOwner{... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/Pelicoin.sol\":984:988  true */\n      0x01\n        /* \"contracts/Pelicoin.sol\":955:971  authorizedOwners */\n      0x06\n        /* \"contracts/Pelicoin.sol\":955:981  authorizedOwners[newOwner] */\n      0x00\n        /* \"contracts/Pelicoin.sol\":972:980  newOwner */\n      dup4\n        /* \"contracts/Pelicoin.sol\":955:981  authorizedOwners[newOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Pelicoin.sol\":955:988  authorizedOwners[newOwner] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pelicoin.sol\":878:1000  function addAuthorizedOwner(address newOwner) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8669:8670  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8657  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8748  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8751:8758  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8760:8766  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8738  _beforeTokenTransfer */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8794:8800  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8790  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8800  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8968:8974  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8956:8963  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8974  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9020:9027  account */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9016:9017  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9029:9035  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9095  _afterTokenTransfer(address(0), account, amount) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9075:9076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9079:9086  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9088:9094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9066  _afterTokenTransfer */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9047:9095  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9524:9525  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9526  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9512  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9526  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9596:9603  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9623  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9595  _beforeTokenTransfer */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9657  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9670:9677  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9678  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9714:9720  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9696:9710  accountBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9696:9720  accountBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9831:9837  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9814:9828  accountBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9814:9837  accountBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9802  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9803:9810  account */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9837  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9946:9952  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9942  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9952  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10004:10005  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9994  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10008:10014  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10074  _afterTokenTransfer(account, address(0), amount) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10046:10053  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10063:10064  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10067:10073  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10045  _afterTokenTransfer */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10026:10074  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9487:10081  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_220:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_226:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_254:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_255:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_256:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_308:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_308)\n    tag_310:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_257:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_258:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_313\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_254\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":818:889   */\n      tag_314\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_255\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_315\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_256\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":988:1017   */\n      tag_316\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_257\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_31:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_318\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_258\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_260:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_262:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_263:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_324\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_262\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_264:\n        /* \"#utility.yul\":1983:2007   */\n      tag_326\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_263\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_327:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_265:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_329\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_264\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_266:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_267:\n        /* \"#utility.yul\":2339:2363   */\n      tag_332\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_266\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_333:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_268:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_335\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_267\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_34:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_338\n      tag_260\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2632:2751   */\n    tag_337:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_339\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_265\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_340\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_268\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_269:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_270:\n        /* \"#utility.yul\":3196:3217   */\n      tag_343\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_269\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_37:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_345\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_270\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_271:\n        /* \"#utility.yul\":3533:3557   */\n      tag_347\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_266\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_41:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_349\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_271\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_44:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_352\n      tag_260\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3908:4027   */\n    tag_351:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_353\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_265\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_354\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_265\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_355\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_268\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_272:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_273:\n        /* \"#utility.yul\":4598:4620   */\n      tag_358\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_272\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_50:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_360\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_273\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_60:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_363\n      tag_260\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4929:5048   */\n    tag_362:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_364\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_268\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_64:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_367\n      tag_260\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5264:5383   */\n    tag_366:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_368\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_265\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_274:\n        /* \"#utility.yul\":5610:5634   */\n      tag_370\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_263\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_79:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_372\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_274\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_105:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_375\n      tag_260\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5968:6087   */\n    tag_374:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_376\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_265\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_377\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_265\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_275:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_113:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_380:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_382\n      tag_275\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6771:6855   */\n    tag_381:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7047   */\n    tag_276:\n        /* \"#utility.yul\":6915:6992   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6912:6913   */\n      0x00\n        /* \"#utility.yul\":6905:6993   */\n      mstore\n        /* \"#utility.yul\":7012:7016   */\n      0x11\n        /* \"#utility.yul\":7009:7010   */\n      0x04\n        /* \"#utility.yul\":7002:7017   */\n      mstore\n        /* \"#utility.yul\":7036:7040   */\n      0x24\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7026:7041   */\n      revert\n        /* \"#utility.yul\":7053:7244   */\n    tag_136:\n        /* \"#utility.yul\":7093:7096   */\n      0x00\n        /* \"#utility.yul\":7112:7132   */\n      tag_385\n        /* \"#utility.yul\":7130:7131   */\n      dup3\n        /* \"#utility.yul\":7112:7132   */\n      tag_266\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7107:7132   */\n      swap2\n      pop\n        /* \"#utility.yul\":7146:7166   */\n      tag_386\n        /* \"#utility.yul\":7164:7165   */\n      dup4\n        /* \"#utility.yul\":7146:7166   */\n      tag_266\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7141:7166   */\n      swap3\n      pop\n        /* \"#utility.yul\":7189:7190   */\n      dup3\n        /* \"#utility.yul\":7186:7187   */\n      dup3\n        /* \"#utility.yul\":7182:7191   */\n      add\n        /* \"#utility.yul\":7175:7191   */\n      swap1\n      pop\n        /* \"#utility.yul\":7210:7213   */\n      dup1\n        /* \"#utility.yul\":7207:7208   */\n      dup3\n        /* \"#utility.yul\":7204:7214   */\n      gt\n        /* \"#utility.yul\":7201:7237   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7217:7235   */\n      tag_388\n      tag_276\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7201:7237   */\n    tag_387:\n        /* \"#utility.yul\":7053:7244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7250:7470   */\n    tag_277:\n        /* \"#utility.yul\":7390:7424   */\n      0x50656c69636f696e3a206f6e6c7920617574686f72697a6564206f776e657273\n        /* \"#utility.yul\":7386:7387   */\n      0x00\n        /* \"#utility.yul\":7378:7384   */\n      dup3\n        /* \"#utility.yul\":7374:7388   */\n      add\n        /* \"#utility.yul\":7367:7425   */\n      mstore\n        /* \"#utility.yul\":7459:7462   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7454:7456   */\n      0x20\n        /* \"#utility.yul\":7446:7452   */\n      dup3\n        /* \"#utility.yul\":7442:7457   */\n      add\n        /* \"#utility.yul\":7435:7463   */\n      mstore\n        /* \"#utility.yul\":7250:7470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:7842   */\n    tag_278:\n        /* \"#utility.yul\":7618:7621   */\n      0x00\n        /* \"#utility.yul\":7639:7706   */\n      tag_391\n        /* \"#utility.yul\":7703:7705   */\n      0x21\n        /* \"#utility.yul\":7698:7701   */\n      dup4\n        /* \"#utility.yul\":7639:7706   */\n      tag_255\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7632:7706   */\n      swap2\n      pop\n        /* \"#utility.yul\":7715:7808   */\n      tag_392\n        /* \"#utility.yul\":7804:7807   */\n      dup3\n        /* \"#utility.yul\":7715:7808   */\n      tag_277\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7833:7835   */\n      0x40\n        /* \"#utility.yul\":7828:7831   */\n      dup3\n        /* \"#utility.yul\":7824:7836   */\n      add\n        /* \"#utility.yul\":7817:7836   */\n      swap1\n      pop\n        /* \"#utility.yul\":7476:7842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7848:8267   */\n    tag_140:\n        /* \"#utility.yul\":8014:8018   */\n      0x00\n        /* \"#utility.yul\":8052:8054   */\n      0x20\n        /* \"#utility.yul\":8041:8050   */\n      dup3\n        /* \"#utility.yul\":8037:8055   */\n      add\n        /* \"#utility.yul\":8029:8055   */\n      swap1\n      pop\n        /* \"#utility.yul\":8101:8110   */\n      dup2\n        /* \"#utility.yul\":8095:8099   */\n      dup2\n        /* \"#utility.yul\":8091:8111   */\n      sub\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8076:8085   */\n      dup4\n        /* \"#utility.yul\":8072:8089   */\n      add\n        /* \"#utility.yul\":8065:8112   */\n      mstore\n        /* \"#utility.yul\":8129:8260   */\n      tag_394\n        /* \"#utility.yul\":8255:8259   */\n      dup2\n        /* \"#utility.yul\":8129:8260   */\n      tag_278\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8121:8260   */\n      swap1\n      pop\n        /* \"#utility.yul\":7848:8267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8273:8453   */\n    tag_279:\n        /* \"#utility.yul\":8321:8398   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8318:8319   */\n      0x00\n        /* \"#utility.yul\":8311:8399   */\n      mstore\n        /* \"#utility.yul\":8418:8422   */\n      0x12\n        /* \"#utility.yul\":8415:8416   */\n      0x04\n        /* \"#utility.yul\":8408:8423   */\n      mstore\n        /* \"#utility.yul\":8442:8446   */\n      0x24\n        /* \"#utility.yul\":8439:8440   */\n      0x00\n        /* \"#utility.yul\":8432:8447   */\n      revert\n        /* \"#utility.yul\":8459:8644   */\n    tag_143:\n        /* \"#utility.yul\":8499:8500   */\n      0x00\n        /* \"#utility.yul\":8516:8536   */\n      tag_397\n        /* \"#utility.yul\":8534:8535   */\n      dup3\n        /* \"#utility.yul\":8516:8536   */\n      tag_266\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8511:8536   */\n      swap2\n      pop\n        /* \"#utility.yul\":8550:8570   */\n      tag_398\n        /* \"#utility.yul\":8568:8569   */\n      dup4\n        /* \"#utility.yul\":8550:8570   */\n      tag_266\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8545:8570   */\n      swap3\n      pop\n        /* \"#utility.yul\":8589:8590   */\n      dup3\n        /* \"#utility.yul\":8579:8614   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":8594:8612   */\n      tag_400\n      tag_279\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8579:8614   */\n    tag_399:\n        /* \"#utility.yul\":8636:8637   */\n      dup3\n        /* \"#utility.yul\":8633:8634   */\n      dup3\n        /* \"#utility.yul\":8629:8638   */\n      div\n        /* \"#utility.yul\":8624:8638   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8650:8874   */\n    tag_280:\n        /* \"#utility.yul\":8790:8824   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":8786:8787   */\n      0x00\n        /* \"#utility.yul\":8778:8784   */\n      dup3\n        /* \"#utility.yul\":8774:8788   */\n      add\n        /* \"#utility.yul\":8767:8825   */\n      mstore\n        /* \"#utility.yul\":8859:8866   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8854:8856   */\n      0x20\n        /* \"#utility.yul\":8846:8852   */\n      dup3\n        /* \"#utility.yul\":8842:8857   */\n      add\n        /* \"#utility.yul\":8835:8867   */\n      mstore\n        /* \"#utility.yul\":8650:8874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8880:9246   */\n    tag_281:\n        /* \"#utility.yul\":9022:9025   */\n      0x00\n        /* \"#utility.yul\":9043:9110   */\n      tag_403\n        /* \"#utility.yul\":9107:9109   */\n      0x25\n        /* \"#utility.yul\":9102:9105   */\n      dup4\n        /* \"#utility.yul\":9043:9110   */\n      tag_255\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9036:9110   */\n      swap2\n      pop\n        /* \"#utility.yul\":9119:9212   */\n      tag_404\n        /* \"#utility.yul\":9208:9211   */\n      dup3\n        /* \"#utility.yul\":9119:9212   */\n      tag_280\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9237:9239   */\n      0x40\n        /* \"#utility.yul\":9232:9235   */\n      dup3\n        /* \"#utility.yul\":9228:9240   */\n      add\n        /* \"#utility.yul\":9221:9240   */\n      swap1\n      pop\n        /* \"#utility.yul\":8880:9246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9252:9671   */\n    tag_180:\n        /* \"#utility.yul\":9418:9422   */\n      0x00\n        /* \"#utility.yul\":9456:9458   */\n      0x20\n        /* \"#utility.yul\":9445:9454   */\n      dup3\n        /* \"#utility.yul\":9441:9459   */\n      add\n        /* \"#utility.yul\":9433:9459   */\n      swap1\n      pop\n        /* \"#utility.yul\":9505:9514   */\n      dup2\n        /* \"#utility.yul\":9499:9503   */\n      dup2\n        /* \"#utility.yul\":9495:9515   */\n      sub\n        /* \"#utility.yul\":9491:9492   */\n      0x00\n        /* \"#utility.yul\":9480:9489   */\n      dup4\n        /* \"#utility.yul\":9476:9493   */\n      add\n        /* \"#utility.yul\":9469:9516   */\n      mstore\n        /* \"#utility.yul\":9533:9664   */\n      tag_406\n        /* \"#utility.yul\":9659:9663   */\n      dup2\n        /* \"#utility.yul\":9533:9664   */\n      tag_281\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9525:9664   */\n      swap1\n      pop\n        /* \"#utility.yul\":9252:9671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9677:9902   */\n    tag_282:\n        /* \"#utility.yul\":9817:9851   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9813:9814   */\n      0x00\n        /* \"#utility.yul\":9805:9811   */\n      dup3\n        /* \"#utility.yul\":9801:9815   */\n      add\n        /* \"#utility.yul\":9794:9852   */\n      mstore\n        /* \"#utility.yul\":9886:9894   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9881:9883   */\n      0x20\n        /* \"#utility.yul\":9873:9879   */\n      dup3\n        /* \"#utility.yul\":9869:9884   */\n      add\n        /* \"#utility.yul\":9862:9895   */\n      mstore\n        /* \"#utility.yul\":9677:9902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9908:10274   */\n    tag_283:\n        /* \"#utility.yul\":10050:10053   */\n      0x00\n        /* \"#utility.yul\":10071:10138   */\n      tag_409\n        /* \"#utility.yul\":10135:10137   */\n      0x26\n        /* \"#utility.yul\":10130:10133   */\n      dup4\n        /* \"#utility.yul\":10071:10138   */\n      tag_255\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10064:10138   */\n      swap2\n      pop\n        /* \"#utility.yul\":10147:10240   */\n      tag_410\n        /* \"#utility.yul\":10236:10239   */\n      dup3\n        /* \"#utility.yul\":10147:10240   */\n      tag_282\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10265:10267   */\n      0x40\n        /* \"#utility.yul\":10260:10263   */\n      dup3\n        /* \"#utility.yul\":10256:10268   */\n      add\n        /* \"#utility.yul\":10249:10268   */\n      swap1\n      pop\n        /* \"#utility.yul\":9908:10274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10280:10699   */\n    tag_194:\n        /* \"#utility.yul\":10446:10450   */\n      0x00\n        /* \"#utility.yul\":10484:10486   */\n      0x20\n        /* \"#utility.yul\":10473:10482   */\n      dup3\n        /* \"#utility.yul\":10469:10487   */\n      add\n        /* \"#utility.yul\":10461:10487   */\n      swap1\n      pop\n        /* \"#utility.yul\":10533:10542   */\n      dup2\n        /* \"#utility.yul\":10527:10531   */\n      dup2\n        /* \"#utility.yul\":10523:10543   */\n      sub\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10508:10517   */\n      dup4\n        /* \"#utility.yul\":10504:10521   */\n      add\n        /* \"#utility.yul\":10497:10544   */\n      mstore\n        /* \"#utility.yul\":10561:10692   */\n      tag_412\n        /* \"#utility.yul\":10687:10691   */\n      dup2\n        /* \"#utility.yul\":10561:10692   */\n      tag_283\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10553:10692   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10705:10928   */\n    tag_284:\n        /* \"#utility.yul\":10845:10879   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":10841:10842   */\n      0x00\n        /* \"#utility.yul\":10833:10839   */\n      dup3\n        /* \"#utility.yul\":10829:10843   */\n      add\n        /* \"#utility.yul\":10822:10880   */\n      mstore\n        /* \"#utility.yul\":10914:10920   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10909:10911   */\n      0x20\n        /* \"#utility.yul\":10901:10907   */\n      dup3\n        /* \"#utility.yul\":10897:10912   */\n      add\n        /* \"#utility.yul\":10890:10921   */\n      mstore\n        /* \"#utility.yul\":10705:10928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11300   */\n    tag_285:\n        /* \"#utility.yul\":11076:11079   */\n      0x00\n        /* \"#utility.yul\":11097:11164   */\n      tag_415\n        /* \"#utility.yul\":11161:11163   */\n      0x24\n        /* \"#utility.yul\":11156:11159   */\n      dup4\n        /* \"#utility.yul\":11097:11164   */\n      tag_255\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11090:11164   */\n      swap2\n      pop\n        /* \"#utility.yul\":11173:11266   */\n      tag_416\n        /* \"#utility.yul\":11262:11265   */\n      dup3\n        /* \"#utility.yul\":11173:11266   */\n      tag_284\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11291:11293   */\n      0x40\n        /* \"#utility.yul\":11286:11289   */\n      dup3\n        /* \"#utility.yul\":11282:11294   */\n      add\n        /* \"#utility.yul\":11275:11294   */\n      swap1\n      pop\n        /* \"#utility.yul\":10934:11300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11306:11725   */\n    tag_200:\n        /* \"#utility.yul\":11472:11476   */\n      0x00\n        /* \"#utility.yul\":11510:11512   */\n      0x20\n        /* \"#utility.yul\":11499:11508   */\n      dup3\n        /* \"#utility.yul\":11495:11513   */\n      add\n        /* \"#utility.yul\":11487:11513   */\n      swap1\n      pop\n        /* \"#utility.yul\":11559:11568   */\n      dup2\n        /* \"#utility.yul\":11553:11557   */\n      dup2\n        /* \"#utility.yul\":11549:11569   */\n      sub\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11534:11543   */\n      dup4\n        /* \"#utility.yul\":11530:11547   */\n      add\n        /* \"#utility.yul\":11523:11570   */\n      mstore\n        /* \"#utility.yul\":11587:11718   */\n      tag_418\n        /* \"#utility.yul\":11713:11717   */\n      dup2\n        /* \"#utility.yul\":11587:11718   */\n      tag_285\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11579:11718   */\n      swap1\n      pop\n        /* \"#utility.yul\":11306:11725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:11952   */\n    tag_286:\n        /* \"#utility.yul\":11871:11905   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11867:11868   */\n      0x00\n        /* \"#utility.yul\":11859:11865   */\n      dup3\n        /* \"#utility.yul\":11855:11869   */\n      add\n        /* \"#utility.yul\":11848:11906   */\n      mstore\n        /* \"#utility.yul\":11940:11944   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11935:11937   */\n      0x20\n        /* \"#utility.yul\":11927:11933   */\n      dup3\n        /* \"#utility.yul\":11923:11938   */\n      add\n        /* \"#utility.yul\":11916:11945   */\n      mstore\n        /* \"#utility.yul\":11731:11952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11958:12324   */\n    tag_287:\n        /* \"#utility.yul\":12100:12103   */\n      0x00\n        /* \"#utility.yul\":12121:12188   */\n      tag_421\n        /* \"#utility.yul\":12185:12187   */\n      0x22\n        /* \"#utility.yul\":12180:12183   */\n      dup4\n        /* \"#utility.yul\":12121:12188   */\n      tag_255\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12114:12188   */\n      swap2\n      pop\n        /* \"#utility.yul\":12197:12290   */\n      tag_422\n        /* \"#utility.yul\":12286:12289   */\n      dup3\n        /* \"#utility.yul\":12197:12290   */\n      tag_286\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12315:12317   */\n      0x40\n        /* \"#utility.yul\":12310:12313   */\n      dup3\n        /* \"#utility.yul\":12306:12318   */\n      add\n        /* \"#utility.yul\":12299:12318   */\n      swap1\n      pop\n        /* \"#utility.yul\":11958:12324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12330:12749   */\n    tag_203:\n        /* \"#utility.yul\":12496:12500   */\n      0x00\n        /* \"#utility.yul\":12534:12536   */\n      0x20\n        /* \"#utility.yul\":12523:12532   */\n      dup3\n        /* \"#utility.yul\":12519:12537   */\n      add\n        /* \"#utility.yul\":12511:12537   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12592   */\n      dup2\n        /* \"#utility.yul\":12577:12581   */\n      dup2\n        /* \"#utility.yul\":12573:12593   */\n      sub\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12558:12567   */\n      dup4\n        /* \"#utility.yul\":12554:12571   */\n      add\n        /* \"#utility.yul\":12547:12594   */\n      mstore\n        /* \"#utility.yul\":12611:12742   */\n      tag_424\n        /* \"#utility.yul\":12737:12741   */\n      dup2\n        /* \"#utility.yul\":12611:12742   */\n      tag_287\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12603:12742   */\n      swap1\n      pop\n        /* \"#utility.yul\":12330:12749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12755:12934   */\n    tag_288:\n        /* \"#utility.yul\":12895:12926   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":12891:12892   */\n      0x00\n        /* \"#utility.yul\":12883:12889   */\n      dup3\n        /* \"#utility.yul\":12879:12893   */\n      add\n        /* \"#utility.yul\":12872:12927   */\n      mstore\n        /* \"#utility.yul\":12755:12934   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12940:13306   */\n    tag_289:\n        /* \"#utility.yul\":13082:13085   */\n      0x00\n        /* \"#utility.yul\":13103:13170   */\n      tag_427\n        /* \"#utility.yul\":13167:13169   */\n      0x1d\n        /* \"#utility.yul\":13162:13165   */\n      dup4\n        /* \"#utility.yul\":13103:13170   */\n      tag_255\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13096:13170   */\n      swap2\n      pop\n        /* \"#utility.yul\":13179:13272   */\n      tag_428\n        /* \"#utility.yul\":13268:13271   */\n      dup3\n        /* \"#utility.yul\":13179:13272   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13297:13299   */\n      0x20\n        /* \"#utility.yul\":13292:13295   */\n      dup3\n        /* \"#utility.yul\":13288:13300   */\n      add\n        /* \"#utility.yul\":13281:13300   */\n      swap1\n      pop\n        /* \"#utility.yul\":12940:13306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13312:13731   */\n    tag_210:\n        /* \"#utility.yul\":13478:13482   */\n      0x00\n        /* \"#utility.yul\":13516:13518   */\n      0x20\n        /* \"#utility.yul\":13505:13514   */\n      dup3\n        /* \"#utility.yul\":13501:13519   */\n      add\n        /* \"#utility.yul\":13493:13519   */\n      swap1\n      pop\n        /* \"#utility.yul\":13565:13574   */\n      dup2\n        /* \"#utility.yul\":13559:13563   */\n      dup2\n        /* \"#utility.yul\":13555:13575   */\n      sub\n        /* \"#utility.yul\":13551:13552   */\n      0x00\n        /* \"#utility.yul\":13540:13549   */\n      dup4\n        /* \"#utility.yul\":13536:13553   */\n      add\n        /* \"#utility.yul\":13529:13576   */\n      mstore\n        /* \"#utility.yul\":13593:13724   */\n      tag_430\n        /* \"#utility.yul\":13719:13723   */\n      dup2\n        /* \"#utility.yul\":13593:13724   */\n      tag_289\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13585:13724   */\n      swap1\n      pop\n        /* \"#utility.yul\":13312:13731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13737:13961   */\n    tag_290:\n        /* \"#utility.yul\":13877:13911   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13873:13874   */\n      0x00\n        /* \"#utility.yul\":13865:13871   */\n      dup3\n        /* \"#utility.yul\":13861:13875   */\n      add\n        /* \"#utility.yul\":13854:13912   */\n      mstore\n        /* \"#utility.yul\":13946:13953   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13941:13943   */\n      0x20\n        /* \"#utility.yul\":13933:13939   */\n      dup3\n        /* \"#utility.yul\":13929:13944   */\n      add\n        /* \"#utility.yul\":13922:13954   */\n      mstore\n        /* \"#utility.yul\":13737:13961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13967:14333   */\n    tag_291:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14130:14197   */\n      tag_433\n        /* \"#utility.yul\":14194:14196   */\n      0x25\n        /* \"#utility.yul\":14189:14192   */\n      dup4\n        /* \"#utility.yul\":14130:14197   */\n      tag_255\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14123:14197   */\n      swap2\n      pop\n        /* \"#utility.yul\":14206:14299   */\n      tag_434\n        /* \"#utility.yul\":14295:14298   */\n      dup3\n        /* \"#utility.yul\":14206:14299   */\n      tag_290\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14324:14326   */\n      0x40\n        /* \"#utility.yul\":14319:14322   */\n      dup3\n        /* \"#utility.yul\":14315:14327   */\n      add\n        /* \"#utility.yul\":14308:14327   */\n      swap1\n      pop\n        /* \"#utility.yul\":13967:14333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14339:14758   */\n    tag_215:\n        /* \"#utility.yul\":14505:14509   */\n      0x00\n        /* \"#utility.yul\":14543:14545   */\n      0x20\n        /* \"#utility.yul\":14532:14541   */\n      dup3\n        /* \"#utility.yul\":14528:14546   */\n      add\n        /* \"#utility.yul\":14520:14546   */\n      swap1\n      pop\n        /* \"#utility.yul\":14592:14601   */\n      dup2\n        /* \"#utility.yul\":14586:14590   */\n      dup2\n        /* \"#utility.yul\":14582:14602   */\n      sub\n        /* \"#utility.yul\":14578:14579   */\n      0x00\n        /* \"#utility.yul\":14567:14576   */\n      dup4\n        /* \"#utility.yul\":14563:14580   */\n      add\n        /* \"#utility.yul\":14556:14603   */\n      mstore\n        /* \"#utility.yul\":14620:14751   */\n      tag_436\n        /* \"#utility.yul\":14746:14750   */\n      dup2\n        /* \"#utility.yul\":14620:14751   */\n      tag_291\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14612:14751   */\n      swap1\n      pop\n        /* \"#utility.yul\":14339:14758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14764:14986   */\n    tag_292:\n        /* \"#utility.yul\":14904:14938   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14900:14901   */\n      0x00\n        /* \"#utility.yul\":14892:14898   */\n      dup3\n        /* \"#utility.yul\":14888:14902   */\n      add\n        /* \"#utility.yul\":14881:14939   */\n      mstore\n        /* \"#utility.yul\":14973:14978   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14968:14970   */\n      0x20\n        /* \"#utility.yul\":14960:14966   */\n      dup3\n        /* \"#utility.yul\":14956:14971   */\n      add\n        /* \"#utility.yul\":14949:14979   */\n      mstore\n        /* \"#utility.yul\":14764:14986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14992:15358   */\n    tag_293:\n        /* \"#utility.yul\":15134:15137   */\n      0x00\n        /* \"#utility.yul\":15155:15222   */\n      tag_439\n        /* \"#utility.yul\":15219:15221   */\n      0x23\n        /* \"#utility.yul\":15214:15217   */\n      dup4\n        /* \"#utility.yul\":15155:15222   */\n      tag_255\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15148:15222   */\n      swap2\n      pop\n        /* \"#utility.yul\":15231:15324   */\n      tag_440\n        /* \"#utility.yul\":15320:15323   */\n      dup3\n        /* \"#utility.yul\":15231:15324   */\n      tag_292\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15349:15351   */\n      0x40\n        /* \"#utility.yul\":15344:15347   */\n      dup3\n        /* \"#utility.yul\":15340:15352   */\n      add\n        /* \"#utility.yul\":15333:15352   */\n      swap1\n      pop\n        /* \"#utility.yul\":14992:15358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15364:15783   */\n    tag_218:\n        /* \"#utility.yul\":15530:15534   */\n      0x00\n        /* \"#utility.yul\":15568:15570   */\n      0x20\n        /* \"#utility.yul\":15557:15566   */\n      dup3\n        /* \"#utility.yul\":15553:15571   */\n      add\n        /* \"#utility.yul\":15545:15571   */\n      swap1\n      pop\n        /* \"#utility.yul\":15617:15626   */\n      dup2\n        /* \"#utility.yul\":15611:15615   */\n      dup2\n        /* \"#utility.yul\":15607:15627   */\n      sub\n        /* \"#utility.yul\":15603:15604   */\n      0x00\n        /* \"#utility.yul\":15592:15601   */\n      dup4\n        /* \"#utility.yul\":15588:15605   */\n      add\n        /* \"#utility.yul\":15581:15628   */\n      mstore\n        /* \"#utility.yul\":15645:15776   */\n      tag_442\n        /* \"#utility.yul\":15771:15775   */\n      dup2\n        /* \"#utility.yul\":15645:15776   */\n      tag_293\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15637:15776   */\n      swap1\n      pop\n        /* \"#utility.yul\":15364:15783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15789:16014   */\n    tag_294:\n        /* \"#utility.yul\":15929:15963   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":15925:15926   */\n      0x00\n        /* \"#utility.yul\":15917:15923   */\n      dup3\n        /* \"#utility.yul\":15913:15927   */\n      add\n        /* \"#utility.yul\":15906:15964   */\n      mstore\n        /* \"#utility.yul\":15998:16006   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15993:15995   */\n      0x20\n        /* \"#utility.yul\":15985:15991   */\n      dup3\n        /* \"#utility.yul\":15981:15996   */\n      add\n        /* \"#utility.yul\":15974:16007   */\n      mstore\n        /* \"#utility.yul\":15789:16014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16020:16386   */\n    tag_295:\n        /* \"#utility.yul\":16162:16165   */\n      0x00\n        /* \"#utility.yul\":16183:16250   */\n      tag_445\n        /* \"#utility.yul\":16247:16249   */\n      0x26\n        /* \"#utility.yul\":16242:16245   */\n      dup4\n        /* \"#utility.yul\":16183:16250   */\n      tag_255\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":16176:16250   */\n      swap2\n      pop\n        /* \"#utility.yul\":16259:16352   */\n      tag_446\n        /* \"#utility.yul\":16348:16351   */\n      dup3\n        /* \"#utility.yul\":16259:16352   */\n      tag_294\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16377:16379   */\n      0x40\n        /* \"#utility.yul\":16372:16375   */\n      dup3\n        /* \"#utility.yul\":16368:16380   */\n      add\n        /* \"#utility.yul\":16361:16380   */\n      swap1\n      pop\n        /* \"#utility.yul\":16020:16386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16392:16811   */\n    tag_223:\n        /* \"#utility.yul\":16558:16562   */\n      0x00\n        /* \"#utility.yul\":16596:16598   */\n      0x20\n        /* \"#utility.yul\":16585:16594   */\n      dup3\n        /* \"#utility.yul\":16581:16599   */\n      add\n        /* \"#utility.yul\":16573:16599   */\n      swap1\n      pop\n        /* \"#utility.yul\":16645:16654   */\n      dup2\n        /* \"#utility.yul\":16639:16643   */\n      dup2\n        /* \"#utility.yul\":16635:16655   */\n      sub\n        /* \"#utility.yul\":16631:16632   */\n      0x00\n        /* \"#utility.yul\":16620:16629   */\n      dup4\n        /* \"#utility.yul\":16616:16633   */\n      add\n        /* \"#utility.yul\":16609:16656   */\n      mstore\n        /* \"#utility.yul\":16673:16804   */\n      tag_448\n        /* \"#utility.yul\":16799:16803   */\n      dup2\n        /* \"#utility.yul\":16673:16804   */\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16665:16804   */\n      swap1\n      pop\n        /* \"#utility.yul\":16392:16811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16817:16998   */\n    tag_296:\n        /* \"#utility.yul\":16957:16990   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":16953:16954   */\n      0x00\n        /* \"#utility.yul\":16945:16951   */\n      dup3\n        /* \"#utility.yul\":16941:16955   */\n      add\n        /* \"#utility.yul\":16934:16991   */\n      mstore\n        /* \"#utility.yul\":16817:16998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17004:17370   */\n    tag_297:\n        /* \"#utility.yul\":17146:17149   */\n      0x00\n        /* \"#utility.yul\":17167:17234   */\n      tag_451\n        /* \"#utility.yul\":17231:17233   */\n      0x1f\n        /* \"#utility.yul\":17226:17229   */\n      dup4\n        /* \"#utility.yul\":17167:17234   */\n      tag_255\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17160:17234   */\n      swap2\n      pop\n        /* \"#utility.yul\":17243:17336   */\n      tag_452\n        /* \"#utility.yul\":17332:17335   */\n      dup3\n        /* \"#utility.yul\":17243:17336   */\n      tag_296\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17361:17363   */\n      0x20\n        /* \"#utility.yul\":17356:17359   */\n      dup3\n        /* \"#utility.yul\":17352:17364   */\n      add\n        /* \"#utility.yul\":17345:17364   */\n      swap1\n      pop\n        /* \"#utility.yul\":17004:17370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17376:17795   */\n    tag_230:\n        /* \"#utility.yul\":17542:17546   */\n      0x00\n        /* \"#utility.yul\":17580:17582   */\n      0x20\n        /* \"#utility.yul\":17569:17578   */\n      dup3\n        /* \"#utility.yul\":17565:17583   */\n      add\n        /* \"#utility.yul\":17557:17583   */\n      swap1\n      pop\n        /* \"#utility.yul\":17629:17638   */\n      dup2\n        /* \"#utility.yul\":17623:17627   */\n      dup2\n        /* \"#utility.yul\":17619:17639   */\n      sub\n        /* \"#utility.yul\":17615:17616   */\n      0x00\n        /* \"#utility.yul\":17604:17613   */\n      dup4\n        /* \"#utility.yul\":17600:17617   */\n      add\n        /* \"#utility.yul\":17593:17640   */\n      mstore\n        /* \"#utility.yul\":17657:17788   */\n      tag_454\n        /* \"#utility.yul\":17783:17787   */\n      dup2\n        /* \"#utility.yul\":17657:17788   */\n      tag_297\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":17649:17788   */\n      swap1\n      pop\n        /* \"#utility.yul\":17376:17795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17801:18021   */\n    tag_298:\n        /* \"#utility.yul\":17941:17975   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":17937:17938   */\n      0x00\n        /* \"#utility.yul\":17929:17935   */\n      dup3\n        /* \"#utility.yul\":17925:17939   */\n      add\n        /* \"#utility.yul\":17918:17976   */\n      mstore\n        /* \"#utility.yul\":18010:18013   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18005:18007   */\n      0x20\n        /* \"#utility.yul\":17997:18003   */\n      dup3\n        /* \"#utility.yul\":17993:18008   */\n      add\n        /* \"#utility.yul\":17986:18014   */\n      mstore\n        /* \"#utility.yul\":17801:18021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18027:18393   */\n    tag_299:\n        /* \"#utility.yul\":18169:18172   */\n      0x00\n        /* \"#utility.yul\":18190:18257   */\n      tag_457\n        /* \"#utility.yul\":18254:18256   */\n      0x21\n        /* \"#utility.yul\":18249:18252   */\n      dup4\n        /* \"#utility.yul\":18190:18257   */\n      tag_255\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":18183:18257   */\n      swap2\n      pop\n        /* \"#utility.yul\":18266:18359   */\n      tag_458\n        /* \"#utility.yul\":18355:18358   */\n      dup3\n        /* \"#utility.yul\":18266:18359   */\n      tag_298\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18384:18386   */\n      0x40\n        /* \"#utility.yul\":18379:18382   */\n      dup3\n        /* \"#utility.yul\":18375:18387   */\n      add\n        /* \"#utility.yul\":18368:18387   */\n      swap1\n      pop\n        /* \"#utility.yul\":18027:18393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18399:18818   */\n    tag_238:\n        /* \"#utility.yul\":18565:18569   */\n      0x00\n        /* \"#utility.yul\":18603:18605   */\n      0x20\n        /* \"#utility.yul\":18592:18601   */\n      dup3\n        /* \"#utility.yul\":18588:18606   */\n      add\n        /* \"#utility.yul\":18580:18606   */\n      swap1\n      pop\n        /* \"#utility.yul\":18652:18661   */\n      dup2\n        /* \"#utility.yul\":18646:18650   */\n      dup2\n        /* \"#utility.yul\":18642:18662   */\n      sub\n        /* \"#utility.yul\":18638:18639   */\n      0x00\n        /* \"#utility.yul\":18627:18636   */\n      dup4\n        /* \"#utility.yul\":18623:18640   */\n      add\n        /* \"#utility.yul\":18616:18663   */\n      mstore\n        /* \"#utility.yul\":18680:18811   */\n      tag_460\n        /* \"#utility.yul\":18806:18810   */\n      dup2\n        /* \"#utility.yul\":18680:18811   */\n      tag_299\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18672:18811   */\n      swap1\n      pop\n        /* \"#utility.yul\":18399:18818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18824:19045   */\n    tag_300:\n        /* \"#utility.yul\":18964:18998   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":18960:18961   */\n      0x00\n        /* \"#utility.yul\":18952:18958   */\n      dup3\n        /* \"#utility.yul\":18948:18962   */\n      add\n        /* \"#utility.yul\":18941:18999   */\n      mstore\n        /* \"#utility.yul\":19033:19037   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19028:19030   */\n      0x20\n        /* \"#utility.yul\":19020:19026   */\n      dup3\n        /* \"#utility.yul\":19016:19031   */\n      add\n        /* \"#utility.yul\":19009:19038   */\n      mstore\n        /* \"#utility.yul\":18824:19045   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19051:19417   */\n    tag_301:\n        /* \"#utility.yul\":19193:19196   */\n      0x00\n        /* \"#utility.yul\":19214:19281   */\n      tag_463\n        /* \"#utility.yul\":19278:19280   */\n      0x22\n        /* \"#utility.yul\":19273:19276   */\n      dup4\n        /* \"#utility.yul\":19214:19281   */\n      tag_255\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":19207:19281   */\n      swap2\n      pop\n        /* \"#utility.yul\":19290:19383   */\n      tag_464\n        /* \"#utility.yul\":19379:19382   */\n      dup3\n        /* \"#utility.yul\":19290:19383   */\n      tag_300\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":19408:19410   */\n      0x40\n        /* \"#utility.yul\":19403:19406   */\n      dup3\n        /* \"#utility.yul\":19399:19411   */\n      add\n        /* \"#utility.yul\":19392:19411   */\n      swap1\n      pop\n        /* \"#utility.yul\":19051:19417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19423:19842   */\n    tag_242:\n        /* \"#utility.yul\":19589:19593   */\n      0x00\n        /* \"#utility.yul\":19627:19629   */\n      0x20\n        /* \"#utility.yul\":19616:19625   */\n      dup3\n        /* \"#utility.yul\":19612:19630   */\n      add\n        /* \"#utility.yul\":19604:19630   */\n      swap1\n      pop\n        /* \"#utility.yul\":19676:19685   */\n      dup2\n        /* \"#utility.yul\":19670:19674   */\n      dup2\n        /* \"#utility.yul\":19666:19686   */\n      sub\n        /* \"#utility.yul\":19662:19663   */\n      0x00\n        /* \"#utility.yul\":19651:19660   */\n      dup4\n        /* \"#utility.yul\":19647:19664   */\n      add\n        /* \"#utility.yul\":19640:19687   */\n      mstore\n        /* \"#utility.yul\":19704:19835   */\n      tag_466\n        /* \"#utility.yul\":19830:19834   */\n      dup2\n        /* \"#utility.yul\":19704:19835   */\n      tag_301\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19696:19835   */\n      swap1\n      pop\n        /* \"#utility.yul\":19423:19842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19848:20030   */\n    tag_302:\n        /* \"#utility.yul\":19988:20022   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":19984:19985   */\n      0x00\n        /* \"#utility.yul\":19976:19982   */\n      dup3\n        /* \"#utility.yul\":19972:19986   */\n      add\n        /* \"#utility.yul\":19965:20023   */\n      mstore\n        /* \"#utility.yul\":19848:20030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20036:20402   */\n    tag_303:\n        /* \"#utility.yul\":20178:20181   */\n      0x00\n        /* \"#utility.yul\":20199:20266   */\n      tag_469\n        /* \"#utility.yul\":20263:20265   */\n      0x20\n        /* \"#utility.yul\":20258:20261   */\n      dup4\n        /* \"#utility.yul\":20199:20266   */\n      tag_255\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":20192:20266   */\n      swap2\n      pop\n        /* \"#utility.yul\":20275:20368   */\n      tag_470\n        /* \"#utility.yul\":20364:20367   */\n      dup3\n        /* \"#utility.yul\":20275:20368   */\n      tag_302\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":20393:20395   */\n      0x20\n        /* \"#utility.yul\":20388:20391   */\n      dup3\n        /* \"#utility.yul\":20384:20396   */\n      add\n        /* \"#utility.yul\":20377:20396   */\n      swap1\n      pop\n        /* \"#utility.yul\":20036:20402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20408:20827   */\n    tag_250:\n        /* \"#utility.yul\":20574:20578   */\n      0x00\n        /* \"#utility.yul\":20612:20614   */\n      0x20\n        /* \"#utility.yul\":20601:20610   */\n      dup3\n        /* \"#utility.yul\":20597:20615   */\n      add\n        /* \"#utility.yul\":20589:20615   */\n      swap1\n      pop\n        /* \"#utility.yul\":20661:20670   */\n      dup2\n        /* \"#utility.yul\":20655:20659   */\n      dup2\n        /* \"#utility.yul\":20651:20671   */\n      sub\n        /* \"#utility.yul\":20647:20648   */\n      0x00\n        /* \"#utility.yul\":20636:20645   */\n      dup4\n        /* \"#utility.yul\":20632:20649   */\n      add\n        /* \"#utility.yul\":20625:20672   */\n      mstore\n        /* \"#utility.yul\":20689:20820   */\n      tag_472\n        /* \"#utility.yul\":20815:20819   */\n      dup2\n        /* \"#utility.yul\":20689:20820   */\n      tag_303\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":20681:20820   */\n      swap1\n      pop\n        /* \"#utility.yul\":20408:20827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe064003e2dab9426fc0149dd4e117ffa30f34c473df1dce838677f6ae5632b564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1551": {
									"entryPoint": null,
									"id": 1551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 537,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1505": {
									"entryPoint": 224,
									"id": 1505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 232,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAuthorizedOwner_1586": {
									"entryPoint": 430,
									"id": 1586,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 682,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6391:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5347:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5352:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5368:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5387:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5392:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5368:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5302:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5307:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5318:11:10",
														"type": ""
													}
												],
												"src": "5234:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5515:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5537:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5545:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5533:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5549:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5526:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5507:6:10",
														"type": ""
													}
												],
												"src": "5409:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5753:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5819:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5760:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5753:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5925:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5836:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5836:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5836:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5949:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5954:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5938:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5731:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5739:3:10",
														"type": ""
													}
												],
												"src": "5597:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6140:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6150:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6158:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6150:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6197:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6208:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6193:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6193:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6216:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6222:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6212:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6186:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6242:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6376:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6250:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6250:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6242:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6120:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6135:4:10",
														"type": ""
													}
												],
												"src": "5969:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260016007553480156200001657600080fd5b506040518060400160405280600881526020017f50656c69436f696e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f504c43000000000000000000000000000000000000000000000000000000000081525081600390816200009491906200054e565b508060049081620000a691906200054e565b505050620000c9620000bd620000e060201b60201c565b620000e860201b60201c565b620000da33620001ae60201b60201c565b620006b8565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001be6200021960201b60201c565b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b62000229620000e060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200024f620002aa60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620002a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029f9062000696565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035657607f821691505b6020821081036200036c576200036b6200030e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003d67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000397565b620003e2868362000397565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200042f620004296200042384620003fa565b62000404565b620003fa565b9050919050565b6000819050919050565b6200044b836200040e565b620004636200045a8262000436565b848454620003a4565b825550505050565b600090565b6200047a6200046b565b6200048781848462000440565b505050565b5b81811015620004af57620004a360008262000470565b6001810190506200048d565b5050565b601f821115620004fe57620004c88162000372565b620004d38462000387565b81016020851015620004e3578190505b620004fb620004f28562000387565b8301826200048c565b50505b505050565b600082821c905092915050565b6000620005236000198460080262000503565b1980831691505092915050565b60006200053e838362000510565b9150826002028217905092915050565b6200055982620002d4565b67ffffffffffffffff811115620005755762000574620002df565b5b6200058182546200033d565b6200058e828285620004b3565b600060209050601f831160018114620005c65760008415620005b1578287015190505b620005bd858262000530565b8655506200062d565b601f198416620005d68662000372565b60005b828110156200060057848901518255600182019150602085019450602081019050620005d9565b868310156200062057848901516200061c601f89168262000510565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200067e60208362000635565b91506200068b8262000646565b602082019050919050565b60006020820190508181036000830152620006b1816200066f565b9050919050565b611f6180620006c86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806379cc6790116100b8578063988d960f1161007c578063988d960f14610365578063a457c2d714610381578063a9059cbb146103b1578063c527caf1146103e1578063dd62ed3e146103fd578063f2fde38b1461042d57610142565b806379cc6790146102d35780638da5cb5b146102ef57806391510f981461030d5780639448b8771461032957806395d89b411461034757610142565b8063395093511161010a578063395093511461020157806340c10f191461023157806342966c681461024d5780634d7e67321461026957806370a0823114610299578063715018a6146102c957610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b3578063313ce567146101e3575b600080fd5b61014f610449565b60405161015c9190611467565b60405180910390f35b61017f600480360381019061017a9190611522565b6104db565b60405161018c919061157d565b60405180910390f35b61019d6104fe565b6040516101aa91906115a7565b60405180910390f35b6101cd60048036038101906101c891906115c2565b610508565b6040516101da919061157d565b60405180910390f35b6101eb610537565b6040516101f89190611631565b60405180910390f35b61021b60048036038101906102169190611522565b610540565b604051610228919061157d565b60405180910390f35b61024b60048036038101906102469190611522565b610577565b005b6102676004803603810190610262919061164c565b610621565b005b610283600480360381019061027e9190611679565b610635565b604051610290919061157d565b60405180910390f35b6102b360048036038101906102ae9190611679565b610655565b6040516102c091906115a7565b60405180910390f35b6102d161069d565b005b6102ed60048036038101906102e89190611522565b6106b1565b005b6102f76106d1565b60405161030491906116b5565b60405180910390f35b61032760048036038101906103229190611679565b6106fb565b005b61033161075e565b60405161033e91906115a7565b60405180910390f35b61034f610764565b60405161035c9190611467565b60405180910390f35b61037f600480360381019061037a919061164c565b6107f6565b005b61039b60048036038101906103969190611522565b61088c565b6040516103a8919061157d565b60405180910390f35b6103cb60048036038101906103c69190611522565b610903565b6040516103d8919061157d565b60405180910390f35b6103fb60048036038101906103f69190611679565b610926565b005b610417600480360381019061041291906116d0565b610989565b60405161042491906115a7565b60405180910390f35b61044760048036038101906104429190611679565b610a10565b005b6060600380546104589061173f565b80601f01602080910402602001604051908101604052809291908181526020018280546104849061173f565b80156104d15780601f106104a6576101008083540402835291602001916104d1565b820191906000526020600020905b8154815290600101906020018083116104b457829003601f168201915b5050505050905090565b6000806104e6610a93565b90506104f3818585610a9b565b600191505092915050565b6000600254905090565b600080610513610a93565b9050610520858285610c64565b61052b858585610cf0565b60019150509392505050565b60006012905090565b60008061054b610a93565b905061056c81858561055d8589610989565b610567919061179f565b610a9b565b600191505092915050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa90611845565b60405180910390fd5b600754816106119190611894565b905061061d8282610f66565b5050565b61063261062c610a93565b826110bc565b50565b60066020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106a5611289565b6106af6000611307565b565b6106c3826106bd610a93565b83610c64565b6106cd82826110bc565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610703611289565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60075481565b6060600480546107739061173f565b80601f016020809104026020016040519081016040528092919081815260200182805461079f9061173f565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990611845565b60405180910390fd5b8060078190555050565b600080610897610a93565b905060006108a58286610989565b9050838110156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190611937565b60405180910390fd5b6108f78286868403610a9b565b60019250505092915050565b60008061090e610a93565b905061091b818585610cf0565b600191505092915050565b61092e611289565b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a18611289565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7e906119c9565b60405180910390fd5b610a9081611307565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190611a5b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611aed565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c5791906115a7565b60405180910390a3505050565b6000610c708484610989565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610cea5781811015610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390611b59565b60405180910390fd5b610ce98484848403610a9b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5690611beb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc590611c7d565b60405180910390fd5b610dd98383836113cd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611d0f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f4d91906115a7565b60405180910390a3610f608484846113d2565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc90611d7b565b60405180910390fd5b610fe1600083836113cd565b8060026000828254610ff3919061179f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110a491906115a7565b60405180910390a36110b8600083836113d2565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361112b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112290611e0d565b60405180910390fd5b611137826000836113cd565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b490611e9f565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161127091906115a7565b60405180910390a3611284836000846113d2565b505050565b611291610a93565b73ffffffffffffffffffffffffffffffffffffffff166112af6106d1565b73ffffffffffffffffffffffffffffffffffffffff1614611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fc90611f0b565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114115780820151818401526020810190506113f6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611439826113d7565b61144381856113e2565b93506114538185602086016113f3565b61145c8161141d565b840191505092915050565b60006020820190508181036000830152611481818461142e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114b98261148e565b9050919050565b6114c9816114ae565b81146114d457600080fd5b50565b6000813590506114e6816114c0565b92915050565b6000819050919050565b6114ff816114ec565b811461150a57600080fd5b50565b60008135905061151c816114f6565b92915050565b6000806040838503121561153957611538611489565b5b6000611547858286016114d7565b92505060206115588582860161150d565b9150509250929050565b60008115159050919050565b61157781611562565b82525050565b6000602082019050611592600083018461156e565b92915050565b6115a1816114ec565b82525050565b60006020820190506115bc6000830184611598565b92915050565b6000806000606084860312156115db576115da611489565b5b60006115e9868287016114d7565b93505060206115fa868287016114d7565b925050604061160b8682870161150d565b9150509250925092565b600060ff82169050919050565b61162b81611615565b82525050565b60006020820190506116466000830184611622565b92915050565b60006020828403121561166257611661611489565b5b60006116708482850161150d565b91505092915050565b60006020828403121561168f5761168e611489565b5b600061169d848285016114d7565b91505092915050565b6116af816114ae565b82525050565b60006020820190506116ca60008301846116a6565b92915050565b600080604083850312156116e7576116e6611489565b5b60006116f5858286016114d7565b9250506020611706858286016114d7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061175757607f821691505b60208210810361176a57611769611710565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117aa826114ec565b91506117b5836114ec565b92508282019050808211156117cd576117cc611770565b5b92915050565b7f50656c69636f696e3a206f6e6c7920617574686f72697a6564206f776e65727360008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061182f6021836113e2565b915061183a826117d3565b604082019050919050565b6000602082019050818103600083015261185e81611822565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061189f826114ec565b91506118aa836114ec565b9250826118ba576118b9611865565b5b828204905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119216025836113e2565b915061192c826118c5565b604082019050919050565b6000602082019050818103600083015261195081611914565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119b36026836113e2565b91506119be82611957565b604082019050919050565b600060208201905081810360008301526119e2816119a6565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611a456024836113e2565b9150611a50826119e9565b604082019050919050565b60006020820190508181036000830152611a7481611a38565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ad76022836113e2565b9150611ae282611a7b565b604082019050919050565b60006020820190508181036000830152611b0681611aca565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611b43601d836113e2565b9150611b4e82611b0d565b602082019050919050565b60006020820190508181036000830152611b7281611b36565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611bd56025836113e2565b9150611be082611b79565b604082019050919050565b60006020820190508181036000830152611c0481611bc8565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611c676023836113e2565b9150611c7282611c0b565b604082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611cf96026836113e2565b9150611d0482611c9d565b604082019050919050565b60006020820190508181036000830152611d2881611cec565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611d65601f836113e2565b9150611d7082611d2f565b602082019050919050565b60006020820190508181036000830152611d9481611d58565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611df76021836113e2565b9150611e0282611d9b565b604082019050919050565b60006020820190508181036000830152611e2681611dea565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e896022836113e2565b9150611e9482611e2d565b604082019050919050565b60006020820190508181036000830152611eb881611e7c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ef56020836113e2565b9150611f0082611ebf565b602082019050919050565b60006020820190508181036000830152611f2481611ee8565b905091905056fea2646970667358221220fe064003e2dab9426fc0149dd4e117ffa30f34c473df1dce838677f6ae5632b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50656C69436F696E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504C430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x94 SWAP2 SWAP1 PUSH3 0x54E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA6 SWAP2 SWAP1 PUSH3 0x54E JUMP JUMPDEST POP POP POP PUSH3 0xC9 PUSH3 0xBD PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xDA CALLER PUSH3 0x1AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6B8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1BE PUSH3 0x219 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x229 PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x24F PUSH3 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x29F SWAP1 PUSH3 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x356 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x36C JUMPI PUSH3 0x36B PUSH3 0x30E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3D6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x3E2 DUP7 DUP4 PUSH3 0x397 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42F PUSH3 0x429 PUSH3 0x423 DUP5 PUSH3 0x3FA JUMP JUMPDEST PUSH3 0x404 JUMP JUMPDEST PUSH3 0x3FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x44B DUP4 PUSH3 0x40E JUMP JUMPDEST PUSH3 0x463 PUSH3 0x45A DUP3 PUSH3 0x436 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3A4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x47A PUSH3 0x46B JUMP JUMPDEST PUSH3 0x487 DUP2 DUP5 DUP5 PUSH3 0x440 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4AF JUMPI PUSH3 0x4A3 PUSH1 0x0 DUP3 PUSH3 0x470 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x48D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4FE JUMPI PUSH3 0x4C8 DUP2 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x4D3 DUP5 PUSH3 0x387 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4E3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4FB PUSH3 0x4F2 DUP6 PUSH3 0x387 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x48C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x523 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x503 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x53E DUP4 DUP4 PUSH3 0x510 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x559 DUP3 PUSH3 0x2D4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x575 JUMPI PUSH3 0x574 PUSH3 0x2DF JUMP JUMPDEST JUMPDEST PUSH3 0x581 DUP3 SLOAD PUSH3 0x33D JUMP JUMPDEST PUSH3 0x58E DUP3 DUP3 DUP6 PUSH3 0x4B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5C6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5B1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5BD DUP6 DUP3 PUSH3 0x530 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x62D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5D6 DUP7 PUSH3 0x372 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x600 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5D9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x620 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x61C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x510 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67E PUSH1 0x20 DUP4 PUSH3 0x635 JUMP JUMPDEST SWAP2 POP PUSH3 0x68B DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6B1 DUP2 PUSH3 0x66F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F61 DUP1 PUSH3 0x6C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x988D960F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x988D960F EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xC527CAF1 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x91510F98 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x9448B877 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x347 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x4D7E6732 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0x69D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E6 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP2 DUP6 DUP6 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x513 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x520 DUP6 DUP3 DUP6 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x52B DUP6 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54B PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x56C DUP2 DUP6 DUP6 PUSH2 0x55D DUP6 DUP10 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH2 0x61D DUP3 DUP3 PUSH2 0xF66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x62C PUSH2 0xA93 JUMP JUMPDEST DUP3 PUSH2 0x10BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x6AF PUSH1 0x0 PUSH2 0x1307 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C3 DUP3 PUSH2 0x6BD PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x6CD DUP3 DUP3 PUSH2 0x10BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x703 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x897 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A5 DUP3 DUP7 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x90E PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA18 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0x1307 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB70 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 DUP5 DUP5 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD3 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD9 DUP4 DUP4 DUP4 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF60 DUP5 DUP5 DUP5 PUSH2 0x13D2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13CD JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10A4 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10B8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1137 DUP3 PUSH1 0x0 DUP4 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B4 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1284 DUP4 PUSH1 0x0 DUP5 PUSH2 0x13D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1291 PUSH2 0xA93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AF PUSH2 0x6D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FC SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1411 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 DUP3 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1443 DUP2 DUP6 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1453 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x141D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1481 DUP2 DUP5 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C9 DUP2 PUSH2 0x14AE JUMP JUMPDEST DUP2 EQ PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E6 DUP2 PUSH2 0x14C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151C DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1538 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1547 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1558 DUP6 DUP3 DUP7 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1577 DUP2 PUSH2 0x1562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E9 DUP7 DUP3 DUP8 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15FA DUP7 DUP3 DUP8 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x160B DUP7 DUP3 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162B DUP2 PUSH2 0x1615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1646 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 DUP3 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168F JUMPI PUSH2 0x168E PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP5 DUP3 DUP6 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP2 PUSH2 0x14AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F5 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1706 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1757 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1710 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1770 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50656C69636F696E3A206F6E6C7920617574686F72697A6564206F776E657273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182F PUSH1 0x21 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x183A DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185E DUP2 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP3 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18AA DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x1865 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH1 0x25 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x192C DUP3 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1950 DUP2 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B3 PUSH1 0x26 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E2 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A45 PUSH1 0x24 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A50 DUP3 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD7 PUSH1 0x22 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE2 DUP3 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B06 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B43 PUSH1 0x1D DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4E DUP3 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B72 DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 PUSH1 0x25 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C04 DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x23 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF9 PUSH1 0x26 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D04 DUP3 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D28 DUP2 PUSH2 0x1CEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 PUSH1 0x1F DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D70 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 PUSH1 0x21 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E26 DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E89 PUSH1 0x22 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF5 PUSH1 0x20 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F00 DUP3 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F24 DUP2 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID MOD BLOCKHASH SUB 0xE2 0xDA 0xB9 TIMESTAMP PUSH16 0xC0149DD4E117FFA30F34C473DF1DCE83 DUP7 PUSH24 0xF6AE5632B564736F6C634300081100330000000000000000 ",
							"sourceMap": "323:1147:9:-:0;;;511:1;481:31;;530:88;;;;;;;;;;1976:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;580:30:9::1;599:10;580:18;;;:30;;:::i;:::-;323:1147:::0;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;878:122:9:-;1094:13:0;:11;;;:13;;:::i;:::-;984:4:9::1;955:16;:26;972:8;955:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;878:122:::0;:::o;1359:130:0:-;1433:12;:10;;;:12;;:::i;:::-;1422:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:169::-;5318:11;5352:6;5347:3;5340:19;5392:4;5387:3;5383:14;5368:29;;5234:169;;;;:::o;5409:182::-;5549:34;5545:1;5537:6;5533:14;5526:58;5409:182;:::o;5597:366::-;5739:3;5760:67;5824:2;5819:3;5760:67;:::i;:::-;5753:74;;5836:93;5925:3;5836:93;:::i;:::-;5954:2;5949:3;5945:12;5938:19;;5597:366;;;:::o;5969:419::-;6135:4;6173:2;6162:9;6158:18;6150:26;;6222:9;6216:4;6212:20;6208:1;6197:9;6193:17;6186:47;6250:131;6376:4;6250:131;:::i;:::-;6242:139;;5969:419;;;:::o;323:1147:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": 5074,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 2715,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": 5069,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_588": {
									"entryPoint": 4284,
									"id": 588,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4745,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_516": {
									"entryPoint": 3942,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1505": {
									"entryPoint": 2707,
									"id": 1505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 3172,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4871,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 3312,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addAuthorizedOwner_1586": {
									"entryPoint": 2342,
									"id": 1586,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 2441,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 1243,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizedOwners_1535": {
									"entryPoint": 1589,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_211": {
									"entryPoint": 1621,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_820": {
									"entryPoint": 1713,
									"id": 820,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_799": {
									"entryPoint": 1569,
									"id": 799,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_187": {
									"entryPoint": 1335,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 2188,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 1344,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1572": {
									"entryPoint": 1399,
									"id": 1572,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_167": {
									"entryPoint": 1097,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1745,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAuthorizedOwner_1600": {
									"entryPoint": 1787,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1693,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTetherPrice_1624": {
									"entryPoint": 2038,
									"id": 1624,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_177": {
									"entryPoint": 1892,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tetherPrice_1538": {
									"entryPoint": 1886,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_197": {
									"entryPoint": 1278,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 1288,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2576,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_236": {
									"entryPoint": 2307,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20830:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:10",
														"type": ""
													}
												],
												"src": "3446:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:10",
														"type": ""
													}
												],
												"src": "3570:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:10"
															},
															"nodeType": "YulIf",
															"src": "3908:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:10",
														"type": ""
													}
												],
												"src": "3798:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:10",
														"type": ""
													}
												],
												"src": "4423:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:10",
														"type": ""
													}
												],
												"src": "4515:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:10",
														"type": ""
													}
												],
												"src": "4633:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:10"
															},
															"nodeType": "YulIf",
															"src": "4929:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:10",
														"type": ""
													}
												],
												"src": "4853:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:10"
															},
															"nodeType": "YulIf",
															"src": "5264:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:10",
														"type": ""
													}
												],
												"src": "5188:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:10",
														"type": ""
													}
												],
												"src": "5523:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:10",
														"type": ""
													}
												],
												"src": "5647:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:10"
															},
															"nodeType": "YulIf",
															"src": "5968:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:10",
														"type": ""
													}
												],
												"src": "5875:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6383:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6592:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6602:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6710:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6724:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6683:26:10"
															},
															"nodeType": "YulIf",
															"src": "6680:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6813:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:38:10"
															},
															"nodeType": "YulIf",
															"src": "6771:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6576:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6585:6:10",
														"type": ""
													}
												],
												"src": "6541:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6895:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6912:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6915:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6905:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6905:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7012:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7002:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7036:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6867:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7097:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7107:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7130:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7112:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7107:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7141:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7164:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7146:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7141:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7175:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7186:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7189:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7215:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7217:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7217:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7217:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7207:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7210:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7204:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:10:10"
															},
															"nodeType": "YulIf",
															"src": "7201:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7084:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7087:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7093:3:10",
														"type": ""
													}
												],
												"src": "7053:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7356:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7378:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7386:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7374:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7374:14:10"
																	},
																	{
																		"hexValue": "50656c69636f696e3a206f6e6c7920617574686f72697a6564206f776e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7390:34:10",
																		"type": "",
																		"value": "Pelicoin: only authorized owners"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7367:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7454:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:15:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7459:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7435:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7348:6:10",
														"type": ""
													}
												],
												"src": "7250:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7622:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7632:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7698:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7703:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7632:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7804:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692",
																	"nodeType": "YulIdentifier",
																	"src": "7715:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7715:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7715:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7817:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7828:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7833:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7817:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7610:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7618:3:10",
														"type": ""
													}
												],
												"src": "7476:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8019:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8029:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8041:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8037:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8029:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8087:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8072:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8095:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8101:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8091:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8091:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8065:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8065:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8121:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8255:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8129:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8121:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7999:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8014:4:10",
														"type": ""
													}
												],
												"src": "7848:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8301:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8321:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8311:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8415:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8439:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8442:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8273:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8501:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8511:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8534:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8516:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8516:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8511:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8545:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8568:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8550:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8545:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8592:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8594:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8594:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8594:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8589:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:9:10"
															},
															"nodeType": "YulIf",
															"src": "8579:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8624:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8633:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8636:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8629:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8629:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8624:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8490:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8493:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8499:1:10",
														"type": ""
													}
												],
												"src": "8459:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8756:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8778:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8786:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8774:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8774:14:10"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8790:34:10",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8767:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8767:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8846:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8854:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8842:15:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8859:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8835:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8835:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8835:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8748:6:10",
														"type": ""
													}
												],
												"src": "8650:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9026:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9036:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9102:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9107:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9043:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9036:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9208:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "9119:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9119:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9221:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9232:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9237:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9221:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9014:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9022:3:10",
														"type": ""
													}
												],
												"src": "8880:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9423:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9433:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9445:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9456:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9441:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9441:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9433:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9480:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9491:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9476:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9499:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9505:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9495:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9469:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9525:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9659:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9533:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9525:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9403:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9418:4:10",
														"type": ""
													}
												],
												"src": "9252:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9783:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9805:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9813:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9817:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9794:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9873:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9881:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9869:15:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9886:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9862:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9775:6:10",
														"type": ""
													}
												],
												"src": "9677:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10054:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10064:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10130:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10135:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10071:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10071:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10236:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10147:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10147:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10147:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10249:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10260:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10265:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10256:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10042:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10050:3:10",
														"type": ""
													}
												],
												"src": "9908:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10451:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10461:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10473:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10484:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10469:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10461:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10519:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10504:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10527:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10533:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10523:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10497:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10497:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10497:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10553:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10687:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10561:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10553:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10431:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10446:4:10",
														"type": ""
													}
												],
												"src": "10280:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10811:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10833:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10841:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10829:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10829:14:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10845:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10822:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10901:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10909:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10897:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10914:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10890:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10890:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10803:6:10",
														"type": ""
													}
												],
												"src": "10705:223:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11080:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11090:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11156:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11161:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11097:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11097:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11090:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11262:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "11173:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11173:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11173:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11275:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11286:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11291:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11282:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11282:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11275:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11068:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11076:3:10",
														"type": ""
													}
												],
												"src": "10934:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11477:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11487:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11499:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11510:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11495:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11487:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11545:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11530:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11553:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11559:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11549:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11549:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11523:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11523:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11523:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11579:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11713:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11587:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11579:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11457:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11472:4:10",
														"type": ""
													}
												],
												"src": "11306:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11837:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11859:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11867:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11855:14:10"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11871:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11848:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11927:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11935:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11923:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11923:15:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11940:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11829:6:10",
														"type": ""
													}
												],
												"src": "11731:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12104:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12114:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12180:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12185:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12121:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12121:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12114:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12286:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "12197:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12197:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12197:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12299:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12310:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12315:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12306:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12299:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12092:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12100:3:10",
														"type": ""
													}
												],
												"src": "11958:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12501:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12511:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12523:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12519:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12519:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12511:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12558:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12569:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12554:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12577:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12583:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12573:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12547:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12603:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12737:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12611:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12611:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12603:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12481:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12496:4:10",
														"type": ""
													}
												],
												"src": "12330:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12861:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12883:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12891:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12879:14:10"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12895:31:10",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12872:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12872:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12853:6:10",
														"type": ""
													}
												],
												"src": "12755:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13086:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13096:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13162:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13103:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13096:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13268:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "13179:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13179:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13179:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13281:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13292:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13297:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13288:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13288:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13074:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13082:3:10",
														"type": ""
													}
												],
												"src": "12940:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13483:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13493:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13505:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13516:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13501:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13493:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13540:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13551:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13536:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13536:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13559:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13565:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13555:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13529:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13529:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13585:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13719:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13593:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13593:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13585:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13463:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13478:4:10",
														"type": ""
													}
												],
												"src": "13312:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13843:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13865:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13873:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13861:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13877:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13854:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13854:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13933:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13941:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13929:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13946:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13922:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13922:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13922:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13835:6:10",
														"type": ""
													}
												],
												"src": "13737:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14113:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14123:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14189:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14194:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14130:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14295:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "14206:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14206:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14206:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14308:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14319:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14324:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14315:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14308:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14101:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14109:3:10",
														"type": ""
													}
												],
												"src": "13967:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14510:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14520:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14532:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14543:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14528:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14520:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14567:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14578:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14563:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14586:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14592:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14582:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14556:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14556:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14612:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14746:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14620:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14612:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14490:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14505:4:10",
														"type": ""
													}
												],
												"src": "14339:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14870:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14892:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14900:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14888:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14888:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14904:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14881:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14881:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14960:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14968:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14956:15:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14973:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14949:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14949:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14949:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14862:6:10",
														"type": ""
													}
												],
												"src": "14764:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15138:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15148:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15214:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15219:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15155:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15148:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15320:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "15231:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15231:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15231:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15333:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15344:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15349:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15340:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15333:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15126:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15134:3:10",
														"type": ""
													}
												],
												"src": "14992:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15535:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15545:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15557:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15568:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15553:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15553:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15545:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15592:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15603:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15588:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15588:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15611:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15617:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15607:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15607:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15581:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15581:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15581:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15637:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15771:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15645:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15645:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15637:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15515:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15530:4:10",
														"type": ""
													}
												],
												"src": "15364:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15895:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15917:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15925:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15913:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15913:14:10"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15929:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15906:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15906:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15985:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15993:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15981:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15981:15:10"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15998:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15887:6:10",
														"type": ""
													}
												],
												"src": "15789:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16166:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16176:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16242:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16247:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16183:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16183:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16176:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16348:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "16259:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16259:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16259:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16361:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16372:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16377:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16368:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16361:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16154:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16162:3:10",
														"type": ""
													}
												],
												"src": "16020:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16563:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16573:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16585:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16596:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16581:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16581:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16573:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16620:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16631:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16616:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16616:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16639:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16645:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16635:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16635:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16609:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16609:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16609:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16665:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16799:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16673:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16665:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16543:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16558:4:10",
														"type": ""
													}
												],
												"src": "16392:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16923:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16945:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16953:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16941:14:10"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16957:33:10",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16934:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16934:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16915:6:10",
														"type": ""
													}
												],
												"src": "16817:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17150:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17160:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17226:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17231:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17167:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17167:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17160:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17332:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "17243:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17243:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17243:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17345:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17356:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17361:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17352:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17352:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17345:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17138:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17146:3:10",
														"type": ""
													}
												],
												"src": "17004:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17547:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17557:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17569:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17580:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17565:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17565:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17557:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17604:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17615:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17600:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17600:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17623:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17629:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17619:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17619:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17593:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17593:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17593:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17649:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17783:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17657:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17657:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17649:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17527:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17542:4:10",
														"type": ""
													}
												],
												"src": "17376:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17907:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17929:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17937:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17925:14:10"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17941:34:10",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17918:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17918:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17997:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18005:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17993:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17993:15:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18010:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17986:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17986:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17986:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17899:6:10",
														"type": ""
													}
												],
												"src": "17801:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18173:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18183:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18249:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18254:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18190:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18190:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18183:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18355:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "18266:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18266:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18368:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18379:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18384:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18375:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18375:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18368:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18161:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18169:3:10",
														"type": ""
													}
												],
												"src": "18027:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18570:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18580:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18592:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18603:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18588:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18580:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18627:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18638:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18623:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18646:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18642:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18616:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18616:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18616:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18672:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18806:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18680:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18680:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18550:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18565:4:10",
														"type": ""
													}
												],
												"src": "18399:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18930:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18952:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18960:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18948:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18948:14:10"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18964:34:10",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18941:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18941:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18941:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19020:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19028:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19016:15:10"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19033:4:10",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19009:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19009:29:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19009:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18922:6:10",
														"type": ""
													}
												],
												"src": "18824:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19197:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19207:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19273:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19278:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19214:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19214:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19207:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19379:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "19290:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19290:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19290:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19392:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19403:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19408:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19399:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19392:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19185:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19193:3:10",
														"type": ""
													}
												],
												"src": "19051:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19594:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19604:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19616:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19627:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19612:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19612:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19604:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19651:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19662:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19647:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19670:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19676:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19666:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19666:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19640:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19696:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19830:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19704:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19704:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19696:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19574:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19589:4:10",
														"type": ""
													}
												],
												"src": "19423:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19954:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19976:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19984:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19972:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19972:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19988:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19965:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19965:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19965:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19946:6:10",
														"type": ""
													}
												],
												"src": "19848:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20182:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20192:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20258:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20263:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20199:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20199:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20192:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20364:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "20275:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20275:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20275:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20377:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20388:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20393:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20384:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20384:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20377:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20170:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20178:3:10",
														"type": ""
													}
												],
												"src": "20036:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20579:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20589:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20601:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20612:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20597:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20597:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20589:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20636:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20647:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20632:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20655:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20661:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20651:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20625:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20625:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20681:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20815:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20689:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20689:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20681:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20559:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20574:4:10",
														"type": ""
													}
												],
												"src": "20408:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pelicoin: only authorized owners\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c806379cc6790116100b8578063988d960f1161007c578063988d960f14610365578063a457c2d714610381578063a9059cbb146103b1578063c527caf1146103e1578063dd62ed3e146103fd578063f2fde38b1461042d57610142565b806379cc6790146102d35780638da5cb5b146102ef57806391510f981461030d5780639448b8771461032957806395d89b411461034757610142565b8063395093511161010a578063395093511461020157806340c10f191461023157806342966c681461024d5780634d7e67321461026957806370a0823114610299578063715018a6146102c957610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b3578063313ce567146101e3575b600080fd5b61014f610449565b60405161015c9190611467565b60405180910390f35b61017f600480360381019061017a9190611522565b6104db565b60405161018c919061157d565b60405180910390f35b61019d6104fe565b6040516101aa91906115a7565b60405180910390f35b6101cd60048036038101906101c891906115c2565b610508565b6040516101da919061157d565b60405180910390f35b6101eb610537565b6040516101f89190611631565b60405180910390f35b61021b60048036038101906102169190611522565b610540565b604051610228919061157d565b60405180910390f35b61024b60048036038101906102469190611522565b610577565b005b6102676004803603810190610262919061164c565b610621565b005b610283600480360381019061027e9190611679565b610635565b604051610290919061157d565b60405180910390f35b6102b360048036038101906102ae9190611679565b610655565b6040516102c091906115a7565b60405180910390f35b6102d161069d565b005b6102ed60048036038101906102e89190611522565b6106b1565b005b6102f76106d1565b60405161030491906116b5565b60405180910390f35b61032760048036038101906103229190611679565b6106fb565b005b61033161075e565b60405161033e91906115a7565b60405180910390f35b61034f610764565b60405161035c9190611467565b60405180910390f35b61037f600480360381019061037a919061164c565b6107f6565b005b61039b60048036038101906103969190611522565b61088c565b6040516103a8919061157d565b60405180910390f35b6103cb60048036038101906103c69190611522565b610903565b6040516103d8919061157d565b60405180910390f35b6103fb60048036038101906103f69190611679565b610926565b005b610417600480360381019061041291906116d0565b610989565b60405161042491906115a7565b60405180910390f35b61044760048036038101906104429190611679565b610a10565b005b6060600380546104589061173f565b80601f01602080910402602001604051908101604052809291908181526020018280546104849061173f565b80156104d15780601f106104a6576101008083540402835291602001916104d1565b820191906000526020600020905b8154815290600101906020018083116104b457829003601f168201915b5050505050905090565b6000806104e6610a93565b90506104f3818585610a9b565b600191505092915050565b6000600254905090565b600080610513610a93565b9050610520858285610c64565b61052b858585610cf0565b60019150509392505050565b60006012905090565b60008061054b610a93565b905061056c81858561055d8589610989565b610567919061179f565b610a9b565b600191505092915050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa90611845565b60405180910390fd5b600754816106119190611894565b905061061d8282610f66565b5050565b61063261062c610a93565b826110bc565b50565b60066020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106a5611289565b6106af6000611307565b565b6106c3826106bd610a93565b83610c64565b6106cd82826110bc565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610703611289565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60075481565b6060600480546107739061173f565b80601f016020809104026020016040519081016040528092919081815260200182805461079f9061173f565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990611845565b60405180910390fd5b8060078190555050565b600080610897610a93565b905060006108a58286610989565b9050838110156108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190611937565b60405180910390fd5b6108f78286868403610a9b565b60019250505092915050565b60008061090e610a93565b905061091b818585610cf0565b600191505092915050565b61092e611289565b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a18611289565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7e906119c9565b60405180910390fd5b610a9081611307565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0190611a5b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611aed565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c5791906115a7565b60405180910390a3505050565b6000610c708484610989565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610cea5781811015610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390611b59565b60405180910390fd5b610ce98484848403610a9b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5690611beb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc590611c7d565b60405180910390fd5b610dd98383836113cd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611d0f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f4d91906115a7565b60405180910390a3610f608484846113d2565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc90611d7b565b60405180910390fd5b610fe1600083836113cd565b8060026000828254610ff3919061179f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110a491906115a7565b60405180910390a36110b8600083836113d2565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361112b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112290611e0d565b60405180910390fd5b611137826000836113cd565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b490611e9f565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161127091906115a7565b60405180910390a3611284836000846113d2565b505050565b611291610a93565b73ffffffffffffffffffffffffffffffffffffffff166112af6106d1565b73ffffffffffffffffffffffffffffffffffffffff1614611305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fc90611f0b565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114115780820151818401526020810190506113f6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611439826113d7565b61144381856113e2565b93506114538185602086016113f3565b61145c8161141d565b840191505092915050565b60006020820190508181036000830152611481818461142e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114b98261148e565b9050919050565b6114c9816114ae565b81146114d457600080fd5b50565b6000813590506114e6816114c0565b92915050565b6000819050919050565b6114ff816114ec565b811461150a57600080fd5b50565b60008135905061151c816114f6565b92915050565b6000806040838503121561153957611538611489565b5b6000611547858286016114d7565b92505060206115588582860161150d565b9150509250929050565b60008115159050919050565b61157781611562565b82525050565b6000602082019050611592600083018461156e565b92915050565b6115a1816114ec565b82525050565b60006020820190506115bc6000830184611598565b92915050565b6000806000606084860312156115db576115da611489565b5b60006115e9868287016114d7565b93505060206115fa868287016114d7565b925050604061160b8682870161150d565b9150509250925092565b600060ff82169050919050565b61162b81611615565b82525050565b60006020820190506116466000830184611622565b92915050565b60006020828403121561166257611661611489565b5b60006116708482850161150d565b91505092915050565b60006020828403121561168f5761168e611489565b5b600061169d848285016114d7565b91505092915050565b6116af816114ae565b82525050565b60006020820190506116ca60008301846116a6565b92915050565b600080604083850312156116e7576116e6611489565b5b60006116f5858286016114d7565b9250506020611706858286016114d7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061175757607f821691505b60208210810361176a57611769611710565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117aa826114ec565b91506117b5836114ec565b92508282019050808211156117cd576117cc611770565b5b92915050565b7f50656c69636f696e3a206f6e6c7920617574686f72697a6564206f776e65727360008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061182f6021836113e2565b915061183a826117d3565b604082019050919050565b6000602082019050818103600083015261185e81611822565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061189f826114ec565b91506118aa836114ec565b9250826118ba576118b9611865565b5b828204905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119216025836113e2565b915061192c826118c5565b604082019050919050565b6000602082019050818103600083015261195081611914565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119b36026836113e2565b91506119be82611957565b604082019050919050565b600060208201905081810360008301526119e2816119a6565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611a456024836113e2565b9150611a50826119e9565b604082019050919050565b60006020820190508181036000830152611a7481611a38565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ad76022836113e2565b9150611ae282611a7b565b604082019050919050565b60006020820190508181036000830152611b0681611aca565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611b43601d836113e2565b9150611b4e82611b0d565b602082019050919050565b60006020820190508181036000830152611b7281611b36565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611bd56025836113e2565b9150611be082611b79565b604082019050919050565b60006020820190508181036000830152611c0481611bc8565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611c676023836113e2565b9150611c7282611c0b565b604082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611cf96026836113e2565b9150611d0482611c9d565b604082019050919050565b60006020820190508181036000830152611d2881611cec565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611d65601f836113e2565b9150611d7082611d2f565b602082019050919050565b60006020820190508181036000830152611d9481611d58565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611df76021836113e2565b9150611e0282611d9b565b604082019050919050565b60006020820190508181036000830152611e2681611dea565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e896022836113e2565b9150611e9482611e2d565b604082019050919050565b60006020820190508181036000830152611eb881611e7c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ef56020836113e2565b9150611f0082611ebf565b602082019050919050565b60006020820190508181036000830152611f2481611ee8565b905091905056fea2646970667358221220fe064003e2dab9426fc0149dd4e117ffa30f34c473df1dce838677f6ae5632b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x988D960F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x988D960F EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xC527CAF1 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x91510F98 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x9448B877 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x347 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x4D7E6732 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0x69D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E6 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP2 DUP6 DUP6 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x513 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x520 DUP6 DUP3 DUP6 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x52B DUP6 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54B PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x56C DUP2 DUP6 DUP6 PUSH2 0x55D DUP6 DUP10 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH2 0x61D DUP3 DUP3 PUSH2 0xF66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x62C PUSH2 0xA93 JUMP JUMPDEST DUP3 PUSH2 0x10BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x6AF PUSH1 0x0 PUSH2 0x1307 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C3 DUP3 PUSH2 0x6BD PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x6CD DUP3 DUP3 PUSH2 0x10BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x703 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x773 SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x173F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x897 PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A5 DUP3 DUP7 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x90E PUSH2 0xA93 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA18 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA90 DUP2 PUSH2 0x1307 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB01 SWAP1 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB70 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC57 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 DUP5 DUP5 PUSH2 0x989 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD3 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xA9B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD9 DUP4 DUP4 DUP4 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xF4D SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xF60 DUP5 DUP5 DUP5 PUSH2 0x13D2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP1 PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13CD JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10A4 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10B8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1137 DUP3 PUSH1 0x0 DUP4 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B4 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1284 DUP4 PUSH1 0x0 DUP5 PUSH2 0x13D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1291 PUSH2 0xA93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AF PUSH2 0x6D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FC SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1411 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1439 DUP3 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1443 DUP2 DUP6 PUSH2 0x13E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1453 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x141D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1481 DUP2 DUP5 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C9 DUP2 PUSH2 0x14AE JUMP JUMPDEST DUP2 EQ PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E6 DUP2 PUSH2 0x14C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP2 EQ PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151C DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x1538 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1547 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1558 DUP6 DUP3 DUP7 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1577 DUP2 PUSH2 0x1562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x156E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15A1 DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E9 DUP7 DUP3 DUP8 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15FA DUP7 DUP3 DUP8 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x160B DUP7 DUP3 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162B DUP2 PUSH2 0x1615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1646 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 DUP3 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168F JUMPI PUSH2 0x168E PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x169D DUP5 DUP3 DUP6 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP2 PUSH2 0x14AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x1489 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F5 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1706 DUP6 DUP3 DUP7 ADD PUSH2 0x14D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1757 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x1710 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1770 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50656C69636F696E3A206F6E6C7920617574686F72697A6564206F776E657273 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182F PUSH1 0x21 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x183A DUP3 PUSH2 0x17D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185E DUP2 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP3 PUSH2 0x14EC JUMP JUMPDEST SWAP2 POP PUSH2 0x18AA DUP4 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x1865 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1921 PUSH1 0x25 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x192C DUP3 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1950 DUP2 PUSH2 0x1914 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B3 PUSH1 0x26 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E2 DUP2 PUSH2 0x19A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A45 PUSH1 0x24 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A50 DUP3 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD7 PUSH1 0x22 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE2 DUP3 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B06 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B43 PUSH1 0x1D DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4E DUP3 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B72 DUP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD5 PUSH1 0x25 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C04 DUP2 PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x23 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C72 DUP3 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF9 PUSH1 0x26 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D04 DUP3 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D28 DUP2 PUSH2 0x1CEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 PUSH1 0x1F DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D70 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 PUSH1 0x21 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP3 PUSH2 0x1D9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E26 DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E89 PUSH1 0x22 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 PUSH2 0x1E2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF5 PUSH1 0x20 DUP4 PUSH2 0x13E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F00 DUP3 PUSH2 0x1EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F24 DUP2 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID MOD BLOCKHASH SUB 0xE2 0xDA 0xB9 TIMESTAMP PUSH16 0xC0149DD4E117FFA30F34C473DF1DCE83 DUP7 PUSH24 0xF6AE5632B564736F6C634300081100330000000000000000 ",
							"sourceMap": "323:1147:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;669:164:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;422:48:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;973:161:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1012:136:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;481:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1346:121:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6592:427:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;878:122:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3974:149:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:1;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;669:164:9:-;1213:16;:28;1230:10;1213:28;;;;;;;;;;;;;;;;;;;;;;;;;1205:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;776:11:::1;;769:6;:18;;;;:::i;:::-;760:27;;804:17;810:2;814:6;804:5;:17::i;:::-;669:164:::0;;:::o;578:89:3:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;422:48:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;3406:125:1:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:3:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1012:136:9:-;1094:13:0;:11;:13::i;:::-;1131:5:9::1;1097:16;:31;1114:13;1097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1012:136:::0;:::o;481:31::-;;;;:::o;2365:102:1:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;1346:121:9:-;1213:16;:28;1230:10;1213:28;;;;;;;;;;;;;;;;;;;;;;;;;1205:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1445:14:::1;1431:11;:28;;;;1346:121:::0;:::o;6592:427:1:-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;878:122:9:-;1094:13:0;:11;:13::i;:::-;984:4:9::1;955:16;:26;972:8;955:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;878:122:::0;:::o;3974:149:1:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;10504:370:1:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;8567:535::-;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9422:659::-;9524:1;9505:21;;:7;:21;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;12180:121:1:-;;;;:::o;12889:120::-;;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:180::-;6915:77;6912:1;6905:88;7012:4;7009:1;7002:15;7036:4;7033:1;7026:15;7053:191;7093:3;7112:20;7130:1;7112:20;:::i;:::-;7107:25;;7146:20;7164:1;7146:20;:::i;:::-;7141:25;;7189:1;7186;7182:9;7175:16;;7210:3;7207:1;7204:10;7201:36;;;7217:18;;:::i;:::-;7201:36;7053:191;;;;:::o;7250:220::-;7390:34;7386:1;7378:6;7374:14;7367:58;7459:3;7454:2;7446:6;7442:15;7435:28;7250:220;:::o;7476:366::-;7618:3;7639:67;7703:2;7698:3;7639:67;:::i;:::-;7632:74;;7715:93;7804:3;7715:93;:::i;:::-;7833:2;7828:3;7824:12;7817:19;;7476:366;;;:::o;7848:419::-;8014:4;8052:2;8041:9;8037:18;8029:26;;8101:9;8095:4;8091:20;8087:1;8076:9;8072:17;8065:47;8129:131;8255:4;8129:131;:::i;:::-;8121:139;;7848:419;;;:::o;8273:180::-;8321:77;8318:1;8311:88;8418:4;8415:1;8408:15;8442:4;8439:1;8432:15;8459:185;8499:1;8516:20;8534:1;8516:20;:::i;:::-;8511:25;;8550:20;8568:1;8550:20;:::i;:::-;8545:25;;8589:1;8579:35;;8594:18;;:::i;:::-;8579:35;8636:1;8633;8629:9;8624:14;;8459:185;;;;:::o;8650:224::-;8790:34;8786:1;8778:6;8774:14;8767:58;8859:7;8854:2;8846:6;8842:15;8835:32;8650:224;:::o;8880:366::-;9022:3;9043:67;9107:2;9102:3;9043:67;:::i;:::-;9036:74;;9119:93;9208:3;9119:93;:::i;:::-;9237:2;9232:3;9228:12;9221:19;;8880:366;;;:::o;9252:419::-;9418:4;9456:2;9445:9;9441:18;9433:26;;9505:9;9499:4;9495:20;9491:1;9480:9;9476:17;9469:47;9533:131;9659:4;9533:131;:::i;:::-;9525:139;;9252:419;;;:::o;9677:225::-;9817:34;9813:1;9805:6;9801:14;9794:58;9886:8;9881:2;9873:6;9869:15;9862:33;9677:225;:::o;9908:366::-;10050:3;10071:67;10135:2;10130:3;10071:67;:::i;:::-;10064:74;;10147:93;10236:3;10147:93;:::i;:::-;10265:2;10260:3;10256:12;10249:19;;9908:366;;;:::o;10280:419::-;10446:4;10484:2;10473:9;10469:18;10461:26;;10533:9;10527:4;10523:20;10519:1;10508:9;10504:17;10497:47;10561:131;10687:4;10561:131;:::i;:::-;10553:139;;10280:419;;;:::o;10705:223::-;10845:34;10841:1;10833:6;10829:14;10822:58;10914:6;10909:2;10901:6;10897:15;10890:31;10705:223;:::o;10934:366::-;11076:3;11097:67;11161:2;11156:3;11097:67;:::i;:::-;11090:74;;11173:93;11262:3;11173:93;:::i;:::-;11291:2;11286:3;11282:12;11275:19;;10934:366;;;:::o;11306:419::-;11472:4;11510:2;11499:9;11495:18;11487:26;;11559:9;11553:4;11549:20;11545:1;11534:9;11530:17;11523:47;11587:131;11713:4;11587:131;:::i;:::-;11579:139;;11306:419;;;:::o;11731:221::-;11871:34;11867:1;11859:6;11855:14;11848:58;11940:4;11935:2;11927:6;11923:15;11916:29;11731:221;:::o;11958:366::-;12100:3;12121:67;12185:2;12180:3;12121:67;:::i;:::-;12114:74;;12197:93;12286:3;12197:93;:::i;:::-;12315:2;12310:3;12306:12;12299:19;;11958:366;;;:::o;12330:419::-;12496:4;12534:2;12523:9;12519:18;12511:26;;12583:9;12577:4;12573:20;12569:1;12558:9;12554:17;12547:47;12611:131;12737:4;12611:131;:::i;:::-;12603:139;;12330:419;;;:::o;12755:179::-;12895:31;12891:1;12883:6;12879:14;12872:55;12755:179;:::o;12940:366::-;13082:3;13103:67;13167:2;13162:3;13103:67;:::i;:::-;13096:74;;13179:93;13268:3;13179:93;:::i;:::-;13297:2;13292:3;13288:12;13281:19;;12940:366;;;:::o;13312:419::-;13478:4;13516:2;13505:9;13501:18;13493:26;;13565:9;13559:4;13555:20;13551:1;13540:9;13536:17;13529:47;13593:131;13719:4;13593:131;:::i;:::-;13585:139;;13312:419;;;:::o;13737:224::-;13877:34;13873:1;13865:6;13861:14;13854:58;13946:7;13941:2;13933:6;13929:15;13922:32;13737:224;:::o;13967:366::-;14109:3;14130:67;14194:2;14189:3;14130:67;:::i;:::-;14123:74;;14206:93;14295:3;14206:93;:::i;:::-;14324:2;14319:3;14315:12;14308:19;;13967:366;;;:::o;14339:419::-;14505:4;14543:2;14532:9;14528:18;14520:26;;14592:9;14586:4;14582:20;14578:1;14567:9;14563:17;14556:47;14620:131;14746:4;14620:131;:::i;:::-;14612:139;;14339:419;;;:::o;14764:222::-;14904:34;14900:1;14892:6;14888:14;14881:58;14973:5;14968:2;14960:6;14956:15;14949:30;14764:222;:::o;14992:366::-;15134:3;15155:67;15219:2;15214:3;15155:67;:::i;:::-;15148:74;;15231:93;15320:3;15231:93;:::i;:::-;15349:2;15344:3;15340:12;15333:19;;14992:366;;;:::o;15364:419::-;15530:4;15568:2;15557:9;15553:18;15545:26;;15617:9;15611:4;15607:20;15603:1;15592:9;15588:17;15581:47;15645:131;15771:4;15645:131;:::i;:::-;15637:139;;15364:419;;;:::o;15789:225::-;15929:34;15925:1;15917:6;15913:14;15906:58;15998:8;15993:2;15985:6;15981:15;15974:33;15789:225;:::o;16020:366::-;16162:3;16183:67;16247:2;16242:3;16183:67;:::i;:::-;16176:74;;16259:93;16348:3;16259:93;:::i;:::-;16377:2;16372:3;16368:12;16361:19;;16020:366;;;:::o;16392:419::-;16558:4;16596:2;16585:9;16581:18;16573:26;;16645:9;16639:4;16635:20;16631:1;16620:9;16616:17;16609:47;16673:131;16799:4;16673:131;:::i;:::-;16665:139;;16392:419;;;:::o;16817:181::-;16957:33;16953:1;16945:6;16941:14;16934:57;16817:181;:::o;17004:366::-;17146:3;17167:67;17231:2;17226:3;17167:67;:::i;:::-;17160:74;;17243:93;17332:3;17243:93;:::i;:::-;17361:2;17356:3;17352:12;17345:19;;17004:366;;;:::o;17376:419::-;17542:4;17580:2;17569:9;17565:18;17557:26;;17629:9;17623:4;17619:20;17615:1;17604:9;17600:17;17593:47;17657:131;17783:4;17657:131;:::i;:::-;17649:139;;17376:419;;;:::o;17801:220::-;17941:34;17937:1;17929:6;17925:14;17918:58;18010:3;18005:2;17997:6;17993:15;17986:28;17801:220;:::o;18027:366::-;18169:3;18190:67;18254:2;18249:3;18190:67;:::i;:::-;18183:74;;18266:93;18355:3;18266:93;:::i;:::-;18384:2;18379:3;18375:12;18368:19;;18027:366;;;:::o;18399:419::-;18565:4;18603:2;18592:9;18588:18;18580:26;;18652:9;18646:4;18642:20;18638:1;18627:9;18623:17;18616:47;18680:131;18806:4;18680:131;:::i;:::-;18672:139;;18399:419;;;:::o;18824:221::-;18964:34;18960:1;18952:6;18948:14;18941:58;19033:4;19028:2;19020:6;19016:15;19009:29;18824:221;:::o;19051:366::-;19193:3;19214:67;19278:2;19273:3;19214:67;:::i;:::-;19207:74;;19290:93;19379:3;19290:93;:::i;:::-;19408:2;19403:3;19399:12;19392:19;;19051:366;;;:::o;19423:419::-;19589:4;19627:2;19616:9;19612:18;19604:26;;19676:9;19670:4;19666:20;19662:1;19651:9;19647:17;19640:47;19704:131;19830:4;19704:131;:::i;:::-;19696:139;;19423:419;;;:::o;19848:182::-;19988:34;19984:1;19976:6;19972:14;19965:58;19848:182;:::o;20036:366::-;20178:3;20199:67;20263:2;20258:3;20199:67;:::i;:::-;20192:74;;20275:93;20364:3;20275:93;:::i;:::-;20393:2;20388:3;20384:12;20377:19;;20036:366;;;:::o;20408:419::-;20574:4;20612:2;20601:9;20597:18;20589:26;;20661:9;20655:4;20651:20;20647:1;20636:9;20632:17;20625:47;20689:131;20815:4;20689:131;:::i;:::-;20681:139;;20408:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1606600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAuthorizedOwner(address)": "27164",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"authorizedOwners(address)": "2934",
								"balanceOf(address)": "2952",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "455",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"removeAuthorizedOwner(address)": "27143",
								"renounceOwnership()": "30531",
								"setTetherPrice(uint256)": "24784",
								"symbol()": "infinite",
								"tetherPrice()": "2518",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30876"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 511,
									"end": 512,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 481,
									"end": 512,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 481,
									"end": 512,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 530,
									"end": 618,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 618,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 530,
									"end": 618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 530,
									"end": 618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "50656C69436F696E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "504C430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 599,
									"end": 609,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 580,
									"end": 598,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 580,
									"end": 598,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 598,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 580,
									"end": 610,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 610,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 878,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 878,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1094,
									"end": 1107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 984,
									"end": 988,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 971,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 980,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 955,
									"end": 981,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 955,
									"end": 988,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 878,
									"end": 1000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 878,
									"end": 1000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1433,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1433,
									"end": 1443,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1433,
									"end": 1443,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1422,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1422,
									"end": 1427,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1427,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1429,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1429,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1422,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1414,
									"end": 1482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1359,
									"end": 1489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1201,
									"end": 1286,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1201,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1247,
									"end": 1254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1201,
									"end": 1286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1201,
									"end": 1286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5318,
									"end": 5329,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5352,
									"end": 5358,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5347,
									"end": 5350,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5340,
									"end": 5359,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5392,
									"end": 5396,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5387,
									"end": 5390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5383,
									"end": 5397,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5368,
									"end": 5397,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5368,
									"end": 5397,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5409,
									"end": 5591,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 5409,
									"end": 5591,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5549,
									"end": 5583,
									"name": "PUSH",
									"source": 10,
									"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
								},
								{
									"begin": 5545,
									"end": 5546,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5543,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5533,
									"end": 5547,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5526,
									"end": 5584,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5409,
									"end": 5591,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5409,
									"end": 5591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5963,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 5597,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5739,
									"end": 5742,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5760,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5824,
									"end": 5826,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5819,
									"end": 5822,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5760,
									"end": 5827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 5760,
									"end": 5827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5760,
									"end": 5827,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5760,
									"end": 5827,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5827,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5753,
									"end": 5827,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5925,
									"end": 5928,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 5836,
									"end": 5929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5929,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5836,
									"end": 5929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5954,
									"end": 5956,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5949,
									"end": 5952,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5945,
									"end": 5957,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5938,
									"end": 5957,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5938,
									"end": 5957,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5963,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5963,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5963,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5597,
									"end": 5963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6388,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5969,
									"end": 6388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6139,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6173,
									"end": 6175,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6162,
									"end": 6171,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6176,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6150,
									"end": 6176,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6150,
									"end": 6176,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6222,
									"end": 6231,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6216,
									"end": 6220,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6232,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6208,
									"end": 6209,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6197,
									"end": 6206,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6193,
									"end": 6210,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6186,
									"end": 6233,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6381,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 6376,
									"end": 6380,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6381,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 6250,
									"end": 6381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6381,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 6250,
									"end": 6381,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6242,
									"end": 6381,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6242,
									"end": 6381,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6388,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6388,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 1470,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe064003e2dab9426fc0149dd4e117ffa30f34c473df1dce838677f6ae5632b564736f6c63430008110033",
									".code": [
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "988D960F"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "988D960F"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "C527CAF1"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "91510F98"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "9448B877"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "4D7E6732"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 323,
											"end": 1470,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 669,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 669,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 669,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 422,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 422,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 422,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 422,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1012,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 481,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 481,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1346,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1346,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 878,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 878,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4546,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5351,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5991,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 669,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1229,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1205,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 776,
											"end": 787,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 769,
											"end": 775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 769,
											"end": 787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 769,
											"end": 787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 810,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 814,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 804,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 804,
											"end": 821,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 804,
											"end": 821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 639,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 639,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 639,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 639,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 639,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 422,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 422,
											"end": 470,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 422,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1074,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 481,
											"end": 512,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 481,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1229,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1213,
											"end": 1241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1205,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1205,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1431,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6717,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6801,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3838,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 955,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 980,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 955,
											"end": 981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 955,
											"end": 988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 878,
											"end": 1000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 10627,
											"end": 10695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10705,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10835,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 11404,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7591,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7744,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7840,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8210,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8247,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8642,
											"end": 8707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8718,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8778,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8968,
											"end": 8974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8956,
											"end": 8963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9029,
											"end": 9035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8999,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9075,
											"end": 9076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9088,
											"end": 9094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9047,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9047,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 9102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9505,
											"end": 9512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9497,
											"end": 9564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9575,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9714,
											"end": 9720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9688,
											"end": 9759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9810,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9946,
											"end": 9952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9978,
											"end": 10015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10046,
											"end": 10053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10026,
											"end": 10074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10026,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 10081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 7047,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6867,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6915,
											"end": 6992,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 7112,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7112,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 7146,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 7146,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7189,
											"end": 7190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7204,
											"end": 7214,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7217,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7201,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7470,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7250,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "PUSH",
											"source": 10,
											"value": "50656C69636F696E3A206F6E6C7920617574686F72697A6564206F776E657273"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7462,
											"name": "PUSH",
											"source": 10,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7250,
											"end": 7470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7842,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 7476,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7618,
											"end": 7621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 7698,
											"end": 7701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7639,
											"end": 7706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7706,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7639,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7804,
											"end": 7807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7715,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7808,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7715,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8267,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 7848,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8101,
											"end": 8110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8095,
											"end": 8099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8091,
											"end": 8111,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 8129,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8260,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8129,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 8267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8273,
											"end": 8453,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8273,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8398,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8399,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8415,
											"end": 8416,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8408,
											"end": 8423,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8442,
											"end": 8446,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8439,
											"end": 8440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8447,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8499,
											"end": 8500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8534,
											"end": 8535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8516,
											"end": 8536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8516,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8511,
											"end": 8536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8550,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8550,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8550,
											"end": 8570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8550,
											"end": 8570,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8550,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8570,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8589,
											"end": 8590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8579,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8579,
											"end": 8614,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8594,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8579,
											"end": 8614,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8579,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8636,
											"end": 8637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8633,
											"end": 8634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8629,
											"end": 8638,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8624,
											"end": 8638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8624,
											"end": 8638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8874,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 8650,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 8788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8767,
											"end": 8825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 8866,
											"name": "PUSH",
											"source": 10,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8867,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8880,
											"end": 9246,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8880,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9022,
											"end": 9025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9043,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9107,
											"end": 9109,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 9102,
											"end": 9105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9043,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 9043,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9043,
											"end": 9110,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9043,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9208,
											"end": 9211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 9119,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9212,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9119,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9239,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9232,
											"end": 9235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8880,
											"end": 9246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8880,
											"end": 9246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8880,
											"end": 9246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8880,
											"end": 9246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9671,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 9252,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9418,
											"end": 9422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9458,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9441,
											"end": 9459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9433,
											"end": 9459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9489,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9469,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9659,
											"end": 9663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 9533,
											"end": 9664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9664,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9533,
											"end": 9664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9902,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 9677,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 9851,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9894,
											"name": "PUSH",
											"source": 10,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9881,
											"end": 9883,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 9884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10274,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 9908,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10050,
											"end": 10053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 10135,
											"end": 10137,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 10130,
											"end": 10133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10071,
											"end": 10138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10138,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 10071,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10064,
											"end": 10138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10064,
											"end": 10138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 10236,
											"end": 10239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10147,
											"end": 10240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10240,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 10147,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10274,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9908,
											"end": 10274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10699,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 10280,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10450,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10484,
											"end": 10486,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10527,
											"end": 10531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10561,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10687,
											"end": 10691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10561,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 10561,
											"end": 10692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10561,
											"end": 10692,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10561,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10553,
											"end": 10692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10553,
											"end": 10692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10928,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10705,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10879,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10829,
											"end": 10843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10822,
											"end": 10880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10920,
											"name": "PUSH",
											"source": 10,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10909,
											"end": 10911,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10897,
											"end": 10912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 11300,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 10934,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11076,
											"end": 11079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11097,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11097,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 11097,
											"end": 11164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11097,
											"end": 11164,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 11097,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 11173,
											"end": 11266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11266,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 11173,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11293,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11282,
											"end": 11294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11275,
											"end": 11294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11275,
											"end": 11294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 11300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 11300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 11300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 11300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11725,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 11306,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11472,
											"end": 11476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11512,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11499,
											"end": 11508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11553,
											"end": 11557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11549,
											"end": 11569,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11530,
											"end": 11547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 11713,
											"end": 11717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 11587,
											"end": 11718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11718,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 11587,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11952,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 11731,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11871,
											"end": 11905,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11867,
											"end": 11868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11859,
											"end": 11865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "PUSH",
											"source": 10,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11935,
											"end": 11937,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11927,
											"end": 11933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11916,
											"end": 11945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12324,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11958,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12100,
											"end": 12103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12180,
											"end": 12183,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12121,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 12121,
											"end": 12188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12121,
											"end": 12188,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 12121,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12114,
											"end": 12188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12114,
											"end": 12188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 12286,
											"end": 12289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 12197,
											"end": 12290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12290,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 12197,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12306,
											"end": 12318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12523,
											"end": 12532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12519,
											"end": 12537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12511,
											"end": 12537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12573,
											"end": 12593,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12567,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 12611,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 12611,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12603,
											"end": 12742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 12934,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 12755,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12895,
											"end": 12926,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 12891,
											"end": 12892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12879,
											"end": 12893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12872,
											"end": 12927,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 12934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 12934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 13306,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 12940,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13082,
											"end": 13085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13103,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 13167,
											"end": 13169,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13162,
											"end": 13165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13103,
											"end": 13170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 13103,
											"end": 13170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13103,
											"end": 13170,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 13103,
											"end": 13170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13096,
											"end": 13170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13096,
											"end": 13170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13268,
											"end": 13271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 13179,
											"end": 13272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13272,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 13179,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13297,
											"end": 13299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13292,
											"end": 13295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13288,
											"end": 13300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13281,
											"end": 13300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13281,
											"end": 13300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 13306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 13306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 13306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 13306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13731,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 13312,
											"end": 13731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13478,
											"end": 13482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13518,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13565,
											"end": 13574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13551,
											"end": 13552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13549,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13536,
											"end": 13553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13529,
											"end": 13576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13719,
											"end": 13723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13593,
											"end": 13724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13724,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 13593,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13737,
											"end": 13961,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 13737,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 13911,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13873,
											"end": 13874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13861,
											"end": 13875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13912,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13953,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13941,
											"end": 13943,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13929,
											"end": 13944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13922,
											"end": 13954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13737,
											"end": 13961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13737,
											"end": 13961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14333,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 13967,
											"end": 14333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 14194,
											"end": 14196,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14189,
											"end": 14192,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 14130,
											"end": 14197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14123,
											"end": 14197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14123,
											"end": 14197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 14295,
											"end": 14298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 14206,
											"end": 14299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14299,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 14206,
											"end": 14299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14326,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14319,
											"end": 14322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14758,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 14339,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14505,
											"end": 14509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14543,
											"end": 14545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14532,
											"end": 14541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14528,
											"end": 14546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14602,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14567,
											"end": 14576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14620,
											"end": 14751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14751,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 14620,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14612,
											"end": 14751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14612,
											"end": 14751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 14986,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 14764,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14904,
											"end": 14938,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14900,
											"end": 14901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14888,
											"end": 14902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14881,
											"end": 14939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14973,
											"end": 14978,
											"name": "PUSH",
											"source": 10,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14968,
											"end": 14970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14960,
											"end": 14966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14956,
											"end": 14971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14949,
											"end": 14979,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 14986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 14986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15358,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 14992,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15134,
											"end": 15137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15155,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 15219,
											"end": 15221,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 15214,
											"end": 15217,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 15155,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15222,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 15155,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15148,
											"end": 15222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15148,
											"end": 15222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15231,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 15320,
											"end": 15323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15231,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 15231,
											"end": 15324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15231,
											"end": 15324,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 15231,
											"end": 15324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15349,
											"end": 15351,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15344,
											"end": 15347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15340,
											"end": 15352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15358,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15783,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 15364,
											"end": 15783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15530,
											"end": 15534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15570,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15557,
											"end": 15566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15545,
											"end": 15571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15545,
											"end": 15571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15617,
											"end": 15626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15611,
											"end": 15615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15607,
											"end": 15627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15603,
											"end": 15604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15592,
											"end": 15601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15588,
											"end": 15605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15645,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 15771,
											"end": 15775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15645,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 15645,
											"end": 15776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15645,
											"end": 15776,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 15645,
											"end": 15776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 16014,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 15789,
											"end": 16014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15929,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 15925,
											"end": 15926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15917,
											"end": 15923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15913,
											"end": 15927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16006,
											"name": "PUSH",
											"source": 10,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15993,
											"end": 15995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15985,
											"end": 15991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15981,
											"end": 15996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 16014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 16014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16386,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 16020,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16162,
											"end": 16165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16183,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 16247,
											"end": 16249,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 16242,
											"end": 16245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16183,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16183,
											"end": 16250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16183,
											"end": 16250,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 16183,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16176,
											"end": 16250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16176,
											"end": 16250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16348,
											"end": 16351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 16259,
											"end": 16352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16352,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16259,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16377,
											"end": 16379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16372,
											"end": 16375,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16368,
											"end": 16380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16361,
											"end": 16380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16361,
											"end": 16380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16811,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 16392,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16558,
											"end": 16562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16596,
											"end": 16598,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16585,
											"end": 16594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 16599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16573,
											"end": 16599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16645,
											"end": 16654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16639,
											"end": 16643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16635,
											"end": 16655,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16631,
											"end": 16632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16620,
											"end": 16629,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16609,
											"end": 16656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16673,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 16799,
											"end": 16803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16673,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 16673,
											"end": 16804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16673,
											"end": 16804,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 16673,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16665,
											"end": 16804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16665,
											"end": 16804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16392,
											"end": 16811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16998,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 16817,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16953,
											"end": 16954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16945,
											"end": 16951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16941,
											"end": 16955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16817,
											"end": 16998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17370,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 17004,
											"end": 17370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17146,
											"end": 17149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17231,
											"end": 17233,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 17226,
											"end": 17229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17167,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 17167,
											"end": 17234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17167,
											"end": 17234,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17167,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17243,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 17332,
											"end": 17335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17243,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17243,
											"end": 17336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17243,
											"end": 17336,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 17243,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17356,
											"end": 17359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17345,
											"end": 17364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17345,
											"end": 17364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17795,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 17376,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17542,
											"end": 17546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17580,
											"end": 17582,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17569,
											"end": 17578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17565,
											"end": 17583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17557,
											"end": 17583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17557,
											"end": 17583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17629,
											"end": 17638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17619,
											"end": 17639,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17615,
											"end": 17616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17604,
											"end": 17613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17600,
											"end": 17617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17593,
											"end": 17640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17657,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17783,
											"end": 17787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17657,
											"end": 17788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 17657,
											"end": 17788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17657,
											"end": 17788,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17657,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17649,
											"end": 17788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17649,
											"end": 17788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17801,
											"end": 18021,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 17801,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17941,
											"end": 17975,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 17937,
											"end": 17938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17929,
											"end": 17935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17918,
											"end": 17976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18010,
											"end": 18013,
											"name": "PUSH",
											"source": 10,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18005,
											"end": 18007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17986,
											"end": 18014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17801,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17801,
											"end": 18021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18169,
											"end": 18172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 18254,
											"end": 18256,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 18249,
											"end": 18252,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 18190,
											"end": 18257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 18355,
											"end": 18358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 18266,
											"end": 18359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18386,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18379,
											"end": 18382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18375,
											"end": 18387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18565,
											"end": 18569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18605,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18592,
											"end": 18601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18580,
											"end": 18606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18580,
											"end": 18606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18652,
											"end": 18661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18642,
											"end": 18662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18638,
											"end": 18639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18627,
											"end": 18636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 18663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 18806,
											"end": 18810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 18680,
											"end": 18811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18672,
											"end": 18811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18672,
											"end": 18811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19045,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 18824,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18964,
											"end": 18998,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 18960,
											"end": 18961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18952,
											"end": 18958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18948,
											"end": 18962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18941,
											"end": 18999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19033,
											"end": 19037,
											"name": "PUSH",
											"source": 10,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19028,
											"end": 19030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19016,
											"end": 19031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19009,
											"end": 19038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19417,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 19051,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19193,
											"end": 19196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19214,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 19278,
											"end": 19280,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 19273,
											"end": 19276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19214,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 19214,
											"end": 19281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19214,
											"end": 19281,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 19214,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19207,
											"end": 19281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19207,
											"end": 19281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19290,
											"end": 19383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 19379,
											"end": 19382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19290,
											"end": 19383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 19290,
											"end": 19383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19290,
											"end": 19383,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 19290,
											"end": 19383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19408,
											"end": 19410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19403,
											"end": 19406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19399,
											"end": 19411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19589,
											"end": 19593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19627,
											"end": 19629,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19616,
											"end": 19625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19612,
											"end": 19630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19604,
											"end": 19630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19604,
											"end": 19630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19676,
											"end": 19685,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19666,
											"end": 19686,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19662,
											"end": 19663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19651,
											"end": 19660,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19647,
											"end": 19664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19640,
											"end": 19687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 19830,
											"end": 19834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 19704,
											"end": 19835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 19704,
											"end": 19835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19696,
											"end": 19835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19696,
											"end": 19835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20030,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 19848,
											"end": 20030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19988,
											"end": 20022,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 19984,
											"end": 19985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19976,
											"end": 19982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19972,
											"end": 19986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19965,
											"end": 20023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20036,
											"end": 20402,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 20036,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20178,
											"end": 20181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20199,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 20263,
											"end": 20265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20258,
											"end": 20261,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 20199,
											"end": 20266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20199,
											"end": 20266,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 20199,
											"end": 20266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20192,
											"end": 20266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20192,
											"end": 20266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 20364,
											"end": 20367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 20275,
											"end": 20368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20368,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 20275,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20395,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20388,
											"end": 20391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20384,
											"end": 20396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20377,
											"end": 20396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20377,
											"end": 20396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20036,
											"end": 20402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20036,
											"end": 20402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20036,
											"end": 20402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20036,
											"end": 20402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20408,
											"end": 20827,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 20408,
											"end": 20827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20574,
											"end": 20578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20612,
											"end": 20614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20601,
											"end": 20610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20597,
											"end": 20615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20589,
											"end": 20615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20589,
											"end": 20615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20661,
											"end": 20670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20655,
											"end": 20659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20651,
											"end": 20671,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20647,
											"end": 20648,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20632,
											"end": 20649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20625,
											"end": 20672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 20815,
											"end": 20819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 20689,
											"end": 20820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20820,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 20689,
											"end": 20820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20681,
											"end": 20820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20408,
											"end": 20827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20408,
											"end": 20827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20408,
											"end": 20827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20408,
											"end": 20827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Pelicoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAuthorizedOwner(address)": "c527caf1",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizedOwners(address)": "4d7e6732",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeAuthorizedOwner(address)": "91510f98",
							"renounceOwnership()": "715018a6",
							"setTetherPrice(uint256)": "988d960f",
							"symbol()": "95d89b41",
							"tetherPrice()": "9448b877",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"addAuthorizedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedOwners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerToRemove\",\"type\":\"address\"}],\"name\":\"removeAuthorizedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTetherPrice\",\"type\":\"uint256\"}],\"name\":\"setTetherPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tetherPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pelicoin.sol\":\"PeliCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Pelicoin.sol\":{\"keccak256\":\"0xb9c27f44bfe6e935dd7c61b57cdd8714798acdac2e4c55e434fc6ca146944e58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0edac908a29793b4b5cfae582580db7e81d4b6e447584ecf4d10ee49321df9e7\",\"dweb:/ipfs/QmaxhBJr3AVjoEfm1jkmEamtRV9p9LeQLPu6P5TUK8ZDsU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1535,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "authorizedOwners",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1538,
								"contract": "contracts/Pelicoin.sol:PeliCoin",
								"label": "tetherPrice",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1515
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1516,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1515,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1515
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1515
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 778,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 847,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 1516,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nameLocations": [
											"1419:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1515,
										"src": "1419:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1428:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 846,
										"src": "1436:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								846,
								777,
								1515
							],
							"name": "ERC20",
							"nameLocation": "1410:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1457:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1509:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 132,
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1583:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1618:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1644:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2032:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2042:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2050:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2065:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1988:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2009:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:1"
									},
									"scope": 699,
									"src": "1976:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										833
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2223:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2240:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2233:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2208:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:1"
									},
									"scope": 699,
									"src": "2154:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										839
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2436:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2446:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2421:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:1"
									},
									"scope": 699,
									"src": "2365:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3156:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3166:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3149:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:1"
									},
									"scope": 699,
									"src": "3091:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3312:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3329:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3322:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3303:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:1"
									},
									"scope": 699,
									"src": "3242:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3489:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3506:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3516:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3499:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3425:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3480:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:1"
									},
									"scope": 699,
									"src": "3406:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3812:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3822:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "3838:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3877:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3881:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3860:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3898:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3745:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3757:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3806:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:1"
									},
									"scope": 699,
									"src": "3727:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4072:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4089:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4101:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4108:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4082:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3993:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4008:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4063:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:1"
									},
									"scope": 699,
									"src": "3974:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4520:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4530:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "4546:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4577:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4593:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4568:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4610:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4465:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4514:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:1"
									},
									"scope": 699,
									"src": "4431:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5323:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5333:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5351:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5389:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5395:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5404:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "5373:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5437:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5441:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5421:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5458:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5243:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5263:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5317:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:1"
									},
									"scope": 699,
									"src": "5190:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5965:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5975:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5991:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6029:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6048:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6055:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6038:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6066:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "6013:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6087:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5898:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5915:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5959:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:1"
									},
									"scope": 699,
									"src": "5871:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6691:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6701:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "6717:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6739:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6776:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6783:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6766:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6809:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6829:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6929:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6945:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6964:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6920:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "7001:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6619:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6636:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6685:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:1"
									},
									"scope": 699,
									"src": "6592:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7581:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7677:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7765:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7771:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7775:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "7744:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7793:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7815:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7825:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7848:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7863:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:1"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7946:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7956:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7964:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7978:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8161:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8171:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8178:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8219:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8225:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8229:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8210:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8205:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8267:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8273:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8277:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8247:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7501:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7523:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7543:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:1"
									},
									"scope": 699,
									"src": "7473:818:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8632:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8650:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8751:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8760:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8718:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8778:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8794:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:1"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:1",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8946:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8956:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8968:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9020:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9029:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8999:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "8994:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9079:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9088:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9047:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8599:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:1"
									},
									"scope": 699,
									"src": "8567:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9487:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9505:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9617:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9575:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9635:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9660:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "9670:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9696:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9714:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:1"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:1",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9793:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "9803:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "9814:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "9831:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:1"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "9930:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9946:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9987:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10008:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "9978:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "9973:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "10046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10067:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "10026:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9437:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9454:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:1"
									},
									"scope": 699,
									"src": "9422:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "10617:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10635:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "10713:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:1"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10784:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10796:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10814:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "10844:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10851:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10860:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "10830:37:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10531:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10554:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10579:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:1"
									},
									"scope": 699,
									"src": "10504:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11275:321:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "11285:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "11322:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11329:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "11312:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11351:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11385:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "11347:243:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "11390:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "11412:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "11432:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:1"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11523:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "11530:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "11539:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "11558:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "11514:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11189:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11212:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:1"
									},
									"scope": 699,
									"src": "11155:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "12299:2:1",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12241:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12261:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:1"
									},
									"scope": 699,
									"src": "12180:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "13007:2:1",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12927:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12949:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12969:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:1"
									},
									"scope": 699,
									"src": "12889:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "1401:11610:1",
							"usedErrors": []
						}
					],
					"src": "105:12907:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 711,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 720,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 777,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 777,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 777,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 777,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 777,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 777,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1515
						],
						"ERC20": [
							699
						],
						"ERC20Burnable": [
							821
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 700,
							"src": "149:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 1516,
							"src": "172:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 783,
										"name": "Context",
										"nameLocations": [
											"454:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1515,
										"src": "454:7:3"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:3"
								},
								{
									"baseName": {
										"id": 785,
										"name": "ERC20",
										"nameLocations": [
											"463:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "463:5:3"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821,
								699,
								846,
								777,
								1515
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "623:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 793,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "639:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "653:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "633:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "633:27:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "592:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:3"
									},
									"scope": 821,
									"src": "578:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1039:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 809,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "1074:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "1049:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1111:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "1105:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:3"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1008:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:3"
									},
									"scope": 821,
									"src": "973:161:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 822,
							"src": "419:717:3",
							"usedErrors": []
						}
					],
					"src": "124:1013:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 847,
							"sourceUnit": 778,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "305:6:4"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 846,
							"linearizedBaseContracts": [
								846,
								777
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 846,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 846,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 842,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 846,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 847,
							"src": "277:405:4",
							"usedErrors": []
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							882
						]
					},
					"id": 883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 849,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 882,
							"linearizedBaseContracts": [
								882
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1494:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1519:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1542:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1568:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1585:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "1604:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:5"
									},
									"scope": 882,
									"src": "1446:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1950:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1988:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:5"
									},
									"scope": 882,
									"src": "1934:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2240:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:5"
									},
									"scope": 882,
									"src": "2189:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 883,
							"src": "620:1631:5",
							"usedErrors": []
						}
					],
					"src": "114:2138:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1493
						],
						"IERC20": [
							777
						],
						"IERC20Permit": [
							882
						],
						"SafeERC20": [
							1163
						]
					},
					"id": 1164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1164,
							"sourceUnit": 778,
							"src": "140:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1164,
							"sourceUnit": 883,
							"src": "164:46:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1164,
							"sourceUnit": 1494,
							"src": "211:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 888,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1163,
							"linearizedBaseContracts": [
								1163
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 891,
									"libraryName": {
										"id": 889,
										"name": "Address",
										"nameLocations": [
											"737:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1493,
										"src": "737:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:6",
									"typeName": {
										"id": 890,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "865:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "895:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 905,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$777",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:6",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 744,
																		"src": "925:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 908,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "950:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 909,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "954:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 903,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 901,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "875:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "875:86:6"
											}
										]
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "IERC20",
														"nameLocations": [
															"794:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "794:6:6"
													},
													"referencedDeclaration": 777,
													"src": "794:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "816:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "836:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:6"
									},
									"scope": 1163,
									"src": "763:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "1102:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "1132:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 930,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "1162:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$777",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:6",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "1162:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "1191:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "1197:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "1201:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 928,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 926,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1112:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:6"
											}
										]
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1009:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 915,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "1009:6:6"
													},
													"referencedDeclaration": 777,
													"src": "1009:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1031:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1053:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "1073:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:6"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:6"
									},
									"scope": 1163,
									"src": "974:241:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1581:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "1830:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 960,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1163",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1163",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 959,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 958,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 961,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 962,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "1877:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 956,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "1846:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$777",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 754,
																				"src": "1846:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 966,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 972,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "2001:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 975,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "2031:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$777",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 764,
																		"src": "2031:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 978,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2055:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2064:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 973,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 971,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1981:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:6"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1505:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "1505:6:6"
													},
													"referencedDeclaration": 777,
													"src": "1505:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1527:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1552:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:6"
									},
									"scope": 1163,
									"src": "1475:603:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "2200:194:6",
										"statements": [
											{
												"assignments": [
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "2210:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1000,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1163",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1163",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 998,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1002,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2264:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 996,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "2233:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$777",
																	"typeString": "contract IERC20"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:6",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 754,
															"src": "2233:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1004,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2275:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2310:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1011,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "2340:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$777",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 764,
																		"src": "2340:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1014,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "2364:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1015,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2373:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1009,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$777",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2290:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:6"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "2124:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 985,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "2124:6:6"
													},
													"referencedDeclaration": 777,
													"src": "2124:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "2146:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "2171:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:6"
									},
									"scope": 1163,
									"src": "2084:310:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "2516:370:6",
										"statements": [
											{
												"id": 1066,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:6",
												"statements": [
													{
														"assignments": [
															1031
														],
														"declarations": [
															{
																"constant": false,
																"id": 1031,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 1066,
																"src": "2550:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1030,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1040,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1036,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1163",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1163",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1034,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1038,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "2604:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1032,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "2573:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$777",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 754,
																"src": "2573:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1042,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "2634:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1043,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "2650:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1041,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1047,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:6"
													},
													{
														"assignments": [
															1049
														],
														"declarations": [
															{
																"constant": false,
																"id": 1049,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 1066,
																"src": "2715:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1048,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1053,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1050,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "2738:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1051,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1055,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "2792:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$777",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1058,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "2822:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$777",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 764,
																				"src": "2822:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:6",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1061,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "2846:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1062,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1049,
																			"src": "2855:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1056,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:6",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$777",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1054,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2772:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$777_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:6"
													}
												]
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2440:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1021,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "2440:6:6"
													},
													"referencedDeclaration": 777,
													"src": "2440:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2462:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2487:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:6"
									},
									"scope": 1163,
									"src": "2400:486:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "3107:257:6",
										"statements": [
											{
												"assignments": [
													1089
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "3117:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1088,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"arguments": [
														{
															"id": 1092,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3152:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1090,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "3139:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$882",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "3139:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1098,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3181:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3188:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "3197:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1101,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3204:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1102,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3214:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1103,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3217:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1104,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3220:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1095,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "3168:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$882",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:6",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 867,
														"src": "3168:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:6"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "3232:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [
														{
															"id": 1111,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "3266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1109,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "3253:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$882",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "3253:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3290:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "3304:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 1114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:6"
											}
										]
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2921:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$882",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1069,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 882,
														"src": "2921:12:6"
													},
													"referencedDeclaration": 882,
													"src": "2921:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$882",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2949:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2972:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2997:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3020:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3046:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1080,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "3082:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:6"
									},
									"scope": 1163,
									"src": "2892:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "3817:636:6",
										"statements": [
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "4166:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1133,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "4220:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1137,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "4200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$777",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$777",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1135,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1253,
														"src": "4192:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1144,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "4275:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "4271:176:6",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "4298:149:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1151,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "4370:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1152,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1154,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1149,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1148,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1158,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$777",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1127,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1126,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 777,
														"src": "3776:6:6"
													},
													"referencedDeclaration": 777,
													"src": "3776:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$777",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3790:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:6"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:6"
									},
									"scope": 1163,
									"src": "3747:706:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1164,
							"src": "707:3748:6",
							"usedErrors": []
						}
					],
					"src": "115:4341:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1493
						]
					},
					"id": 1494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1165,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1166,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1493,
							"linearizedBaseContracts": [
								1493
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1174,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1179,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1493,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1192,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1493",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1493",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1190,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1195,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													1201,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1200,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1208,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1202,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1204,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1210,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1493,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1225,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1317
														],
														"referencedDeclaration": 1317,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1231,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1493,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1249,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1245,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1317
														],
														"referencedDeclaration": 1317,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1251,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 1493,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1266,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1265,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1317
														],
														"referencedDeclaration": 1317,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1271,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 1493,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1290,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1493",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1493",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1288,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1293,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													1299,
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1298,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1300,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"arguments": [
														{
															"id": 1306,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1302,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1304,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1310,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1311,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1312,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1313,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1309,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1315,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 1493,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1327,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1334,
															1363
														],
														"referencedDeclaration": 1363,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1332,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 1493,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													1347,
													1349
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1362,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1349,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1362,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1348,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"id": 1352,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1350,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1356,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1358,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1359,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1355,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1361,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 1493,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1373,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1380,
															1409
														],
														"referencedDeclaration": 1409,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1378,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 1493,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													1393,
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1392,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1394,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"arguments": [
														{
															"id": 1398,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1396,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1404,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1405,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1401,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1407,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 1493,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 1423,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1414,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1441,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1442,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1440,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1444,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1424,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1436,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 1435,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1430,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1412,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1429,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1181,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1428,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1434,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1437,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1422,
															"id": 1438,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 1493,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1451,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1469,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1464,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1468,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 1470,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 1463,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 1461,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1459,
															"id": 1462,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 1493,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1479,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1486,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1485,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 1490,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 1484,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1474,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1474,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 1483,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 1493,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1494,
							"src": "194:8964:7",
							"usedErrors": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1515
						]
					},
					"id": 1516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1496,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1515,
							"linearizedBaseContracts": [
								1515
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1501,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1503,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1515,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1510,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1512,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1515,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1516,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"contracts/Pelicoin.sol": {
				"ast": {
					"absolutePath": "contracts/Pelicoin.sol",
					"exportedSymbols": {
						"Address": [
							1493
						],
						"Context": [
							1515
						],
						"ERC20": [
							699
						],
						"ERC20Burnable": [
							821
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						],
						"IERC20Permit": [
							882
						],
						"Ownable": [
							112
						],
						"PeliCoin": [
							1625
						],
						"SafeERC20": [
							1163
						]
					},
					"id": 1626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 822,
							"src": "63:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 1164,
							"src": "141:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 700,
							"src": "208:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 113,
							"src": "265:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1522,
										"name": "ERC20",
										"nameLocations": [
											"344:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "344:5:9"
									},
									"id": 1523,
									"nodeType": "InheritanceSpecifier",
									"src": "344:5:9"
								},
								{
									"baseName": {
										"id": 1524,
										"name": "Ownable",
										"nameLocations": [
											"351:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "351:7:9"
									},
									"id": 1525,
									"nodeType": "InheritanceSpecifier",
									"src": "351:7:9"
								},
								{
									"baseName": {
										"id": 1526,
										"name": "ERC20Burnable",
										"nameLocations": [
											"360:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "360:13:9"
									},
									"id": 1527,
									"nodeType": "InheritanceSpecifier",
									"src": "360:13:9"
								}
							],
							"canonicalName": "PeliCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1625,
							"linearizedBaseContracts": [
								1625,
								821,
								112,
								699,
								846,
								777,
								1515
							],
							"name": "PeliCoin",
							"nameLocation": "332:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1531,
									"libraryName": {
										"id": 1528,
										"name": "SafeERC20",
										"nameLocations": [
											"389:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1163,
										"src": "389:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "383:27:9",
									"typeName": {
										"id": 1530,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1529,
											"name": "IERC20",
											"nameLocations": [
												"403:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 777,
											"src": "403:6:9"
										},
										"referencedDeclaration": 777,
										"src": "403:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$777",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4d7e6732",
									"id": 1535,
									"mutability": "mutable",
									"name": "authorizedOwners",
									"nameLocation": "454:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1625,
									"src": "422:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1534,
										"keyType": {
											"id": 1532,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "430:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "422:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1533,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "441:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9448b877",
									"id": 1538,
									"mutability": "mutable",
									"name": "tetherPrice",
									"nameLocation": "496:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1625,
									"src": "481:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1536,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1537,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "511:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "569:49:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "599:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "603:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "599:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1545,
														"name": "addAuthorizedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "580:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "580:30:9"
											}
										]
									},
									"id": 1551,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50656c69436f696e",
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "550:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e9bfc0e76f564991eed310481f31cafed72d19b9076b18453181f8833b89b870",
														"typeString": "literal_string \"PeliCoin\""
													},
													"value": "PeliCoin"
												},
												{
													"hexValue": "504c43",
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "562:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f6eb5a63ce3d6418ad290c45d714ac01a2e4b2f484032c00b09ad55467f7113a",
														"typeString": "literal_string \"PLC\""
													},
													"value": "PLC"
												}
											],
											"id": 1543,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1540,
												"name": "ERC20",
												"nameLocations": [
													"544:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "544:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "544:24:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:9"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:9"
									},
									"scope": 1625,
									"src": "530:88:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "739:94:9",
										"statements": [
											{
												"expression": {
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "760:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1561,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "769:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1562,
															"name": "tetherPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "776:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "769:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "760:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "760:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "810:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "814:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1566,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "804:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "804:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "804:17:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1557,
												"name": "onlyAuthorizedOwner",
												"nameLocations": [
													"718:19:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1612,
												"src": "718:19:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "718:21:9"
										}
									],
									"name": "mint",
									"nameLocation": "678:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "691:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "683:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "703:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "695:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:28:9"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:0:9"
									},
									"scope": 1625,
									"src": "669:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "940:60:9",
										"statements": [
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1579,
															"name": "authorizedOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "955:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1581,
														"indexExpression": {
															"id": 1580,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "972:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "955:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "984:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "955:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "955:33:9"
											}
										]
									},
									"functionSelector": "c527caf1",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1576,
												"name": "onlyOwner",
												"nameLocations": [
													"931:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "931:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "931:9:9"
										}
									],
									"name": "addAuthorizedOwner",
									"nameLocation": "887:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "914:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "906:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:18:9"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:9"
									},
									"scope": 1625,
									"src": "878:122:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "1082:66:9",
										"statements": [
											{
												"expression": {
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1593,
															"name": "authorizedOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "1097:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1595,
														"indexExpression": {
															"id": 1594,
															"name": "ownerToRemove",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "1114:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1097:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1097:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "1097:39:9"
											}
										]
									},
									"functionSelector": "91510f98",
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1590,
												"name": "onlyOwner",
												"nameLocations": [
													"1073:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1073:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1073:9:9"
										}
									],
									"name": "removeAuthorizedOwner",
									"nameLocation": "1021:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "ownerToRemove",
												"nameLocation": "1051:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1043:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:23:9"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:9"
									},
									"scope": 1625,
									"src": "1012:136:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "1190:117:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1603,
																"name": "authorizedOwners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "1213:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1606,
															"indexExpression": {
																"expression": {
																	"id": 1604,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1230:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1234:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1230:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1213:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656c69636f696e3a206f6e6c7920617574686f72697a6564206f776e6572732e",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1243:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692",
																"typeString": "literal_string \"Pelicoin: only authorized owners.\""
															},
															"value": "Pelicoin: only authorized owners."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08636fe2fab352cfe47e44ce970c3d20b6d9d5c2d3418eeb12d365d3ab185692",
																"typeString": "literal_string \"Pelicoin: only authorized owners.\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1205:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "1205:74:9"
											},
											{
												"id": 1610,
												"nodeType": "PlaceholderStatement",
												"src": "1294:1:9"
											}
										]
									},
									"id": 1612,
									"name": "onlyAuthorizedOwner",
									"nameLocation": "1169:19:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:2:9"
									},
									"src": "1160:147:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "1420:47:9",
										"statements": [
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1619,
														"name": "tetherPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "1431:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1620,
														"name": "newTetherPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "1445:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "1431:28:9"
											}
										]
									},
									"functionSelector": "988d960f",
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "onlyAuthorizedOwner",
												"nameLocations": [
													"1401:19:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1612,
												"src": "1401:19:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1401:19:9"
										}
									],
									"name": "setTetherPrice",
									"nameLocation": "1355:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "newTetherPrice",
												"nameLocation": "1378:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "1370:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:24:9"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:0:9"
									},
									"scope": 1625,
									"src": "1346:121:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1626,
							"src": "323:1147:9",
							"usedErrors": []
						}
					],
					"src": "35:1435:9"
				},
				"id": 9
			}
		}
	}
}